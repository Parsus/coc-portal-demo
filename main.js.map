{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api-client/config.factory.ts","webpack:///./src/app/api-client/index.ts","webpack:///./src/app/api-client/swagger-generated/api.module.ts","webpack:///./src/app/api-client/swagger-generated/api/api.ts","webpack:///./src/app/api-client/swagger-generated/api/default.service.ts","webpack:///./src/app/api-client/swagger-generated/configuration.ts","webpack:///./src/app/api-client/swagger-generated/index.ts","webpack:///./src/app/api-client/swagger-generated/variables.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/add-oauth2-dummy-client-secret.interceptor.ts","webpack:///./src/app/auth/auth.config.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/index.ts","webpack:///./src/app/auth/is-authenticated.guard.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/http-interceptors/index.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/temp.component.ts","webpack:///./src/app/ui-kit/ui-kit.component.html","webpack:///./src/app/ui-kit/ui-kit.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./dashboard/dashboard.module\": [\n\t\t\"./src/app/dashboard/dashboard.module.ts\",\n\t\t\"dashboard-dashboard-module\"\n\t],\n\t\"./wizard/wizard.module\": [\n\t\t\"./src/app/wizard/wizard.module.ts\",\n\t\t\"wizard-wizard-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Configuration, ConfigurationParameters } from './swagger-generated';\n\n// API configuration factory\n// see https://github.com/swagger-api/swagger-codegen/tree/master/samples/client/petstore/typescript-angular-v6/npm#general-usage\nexport function apiConfigFactory (): Configuration {\n\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n    apiKeys: {}\n  };\n\n  return new Configuration(params);\n}\n","export * from './swagger-generated';\nexport * from './config.factory';\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Configuration } from './configuration';\n\nimport { DefaultService } from './api/default.service';\n\n@NgModule({\n  imports:      [ CommonModule, HttpClientModule ],\n  declarations: [],\n  exports:      [],\n  providers: [\n    DefaultService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        }\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import your base AppModule only.');\n        }\n    }\n}\n","export * from './default.service';\nimport { DefaultService } from './default.service';\nexport const APIS = [DefaultService];\n","/**\n * City of Chandler License Portal API\n * City of Chandler License Portal API documentation\n *\n * OpenAPI spec version: 1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { EntityPagedData } from '../model/entityPagedData';\nimport { LocationPagedData } from '../model/locationPagedData';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class DefaultService {\n\n    protected basePath = 'http://localhost';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (let consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public entitiesGet(observe?: 'body', reportProgress?: boolean): Observable<EntityPagedData>;\n    public entitiesGet(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<EntityPagedData>>;\n    public entitiesGet(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<EntityPagedData>>;\n    public entitiesGet(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (bearer) required\n        if (this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        let httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set(\"Accept\", httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        return this.httpClient.get<EntityPagedData>(`${this.basePath}/entities`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public locationsGet(observe?: 'body', reportProgress?: boolean): Observable<LocationPagedData>;\n    public locationsGet(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LocationPagedData>>;\n    public locationsGet(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LocationPagedData>>;\n    public locationsGet(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (bearer) required\n        if (this.configuration.apiKeys[\"Authorization\"]) {\n            headers = headers.set('Authorization', this.configuration.apiKeys[\"Authorization\"]);\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        let httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set(\"Accept\", httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        return this.httpClient.get<LocationPagedData>(`${this.basePath}/locations`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public rootGet(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public rootGet(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public rootGet(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public rootGet(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        let httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set(\"Accept\", httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param {string[]} contentTypes - the array of content types that are available for selection\n     * @returns {string} the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param {string[]} accepts - the array of content types that are available for selection.\n     * @returns {string} the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param {string} mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return {boolean} True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","export * from './api/api';\nexport * from './model/models';\nexport * from './variables';\nexport * from './configuration';\nexport * from './api.module';","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TempComponent } from './temp.component';\n\nconst routes: Routes = [\n  {\n    path: 'wizard',\n    loadChildren: './wizard/wizard.module#WizardModule'\n  },\n  {\n    path: '',\n    component: TempComponent\n  },\n  {\n    path: 'dashboard',\n    loadChildren: './dashboard/dashboard.module#DashboardModule'\n  },\n  {\n    path: '',\n    redirectTo: '',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n<coc-navbar></coc-navbar>\\n\\n<main>\\n  <router-outlet></router-outlet>\\n</main>\\n\\n<coc-footer></coc-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth';\n\n@Component({\n  selector: 'coc-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  title = 'Business Registration & Specialty Licenses';\n\n  constructor(private authService: AuthService) {\n  }\n\n  ngOnInit() {\n    this.authService.configure();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OAuthModule } from 'angular-oauth2-oidc-codeflow';\nimport { AccordionModule } from 'ngx-bootstrap';\n\nimport { SharedModule } from './shared/shared.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TempComponent } from './temp.component';\n\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { UiKitComponent } from './ui-kit/ui-kit.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { environment } from '../environments/environment';\nimport { httpInterceptorProviders } from './http-interceptors';\n\nimport { ApiModule, BASE_PATH, apiConfigFactory } from './api-client';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TempComponent,\n    NavbarComponent,\n    FooterComponent,\n    UiKitComponent\n  ],\n  imports: [\n    ApiModule.forRoot(apiConfigFactory),\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    OAuthModule.forRoot(),\n    AccordionModule.forRoot()\n  ],\n  providers: [\n    httpInterceptorProviders,\n    { provide: BASE_PATH, useValue: environment.API_BASE_PATH }\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\n\nimport { OAuthService } from 'angular-oauth2-oidc-codeflow';\n\n\n/** Adds dummy client secret to body of OAuth2 token endpoint requests */\n/* This is needed because currently the passport strategy requires a client_secret\n * even though doesn't make sense for SPAs to have one\n */\n@Injectable()\nexport class AddOauth2DummyClientSecretInterceptor implements HttpInterceptor {\n\n  constructor(private auth: OAuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    if (req.url.indexOf(this.auth.tokenEndpoint) !== -1) {\n\n      if (!req.body.has('client_secret')) {\n\n        // copy the body and add client_secret\n        const newReq = req.clone({\n          body: req.body.set('client_secret', this.auth.dummyClientSecret)\n        });\n\n        // send the cloned request to the next handler.\n        req = newReq;\n      }\n\n    }\n\n    return next.handle(req);\n  }\n}\n","import { AuthConfig } from 'angular-oauth2-oidc-codeflow';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'http://localhost:3000',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/',\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'oauth-consumer-example',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n\n  logoutUrl: '/',\n\n  dummyClientSecret: 'opensecret',\n};\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router\n} from '@angular/router';\nimport {\n  OAuthService,\n  OAuthStorage\n} from 'angular-oauth2-oidc-codeflow';\nimport {\n  JwksValidationHandler\n} from 'angular-oauth2-oidc-codeflow';\nimport {\n  authConfig\n} from './auth.config';\nimport {\n  Configuration\n} from '../api-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _configurePromise: Promise<any>;\n\n  constructor(\n    private oauthService: OAuthService,\n    private oauthStorage: OAuthStorage,\n    private route: ActivatedRoute,\n    private router: Router,\n    private apiConfiguration: Configuration) {\n\n  }\n\n  public configure(): Promise<void> {\n\n    // If there is a configure in process just return that\n    if (this._configurePromise) {\n      return this._configurePromise;\n    }\n\n    this.oauthService.configure(authConfig);\n    this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n\n    return this._configurePromise = this.oauthService.loadDiscoveryDocument()\n      .then(() => {\n\n        // 20190312RBP - Added state checking because angular-oauth2-oidc-codeflow does not seem to do it\n        // see https://tools.ietf.org/html/rfc6749#section-10.12\n        if (this.route.snapshot.queryParamMap.has('state')) {\n          const state = this.route.snapshot.queryParamMap.get('state');\n          if (!this.validateState(state)) {\n            throw new Error('State is invalid, cannot login');\n          }\n        }\n\n        return this.oauthService.tryLogin();\n      })\n      .then(() => {\n        console.log('Logged in');\n\n        const returnUrl = this.oauthStorage.getItem('__cocReturnUrl');\n\n        // Set authorization for API client\n        this.setApiAuthorization(this.oauthService.getAccessToken());\n\n        if (returnUrl) {\n          // login successful so redirect to return url\n          this.oauthStorage.removeItem('__cocReturnUrl');\n          this.router.navigateByUrl(returnUrl);\n        }\n\n      })\n      .catch(err => {\n        console.log('Unable to login');\n      });\n\n  }\n\n  public async isSignedIn(): Promise<boolean> {\n\n    await this.ensureConfigured();\n    return this.oauthService.hasValidAccessToken();\n\n  }\n\n  public logout(): void {\n\n    // Remove authorization from API client\n    this.setApiAuthorization(null);\n\n    this.oauthService.logOut();\n  }\n\n  public signIn(returnUrl: string): void {\n\n    // Save the returnUrl to go back to after returning\n    // from auth code grant\n    this.oauthStorage.setItem('__cocReturnUrl', returnUrl);\n    this.oauthService.initAuthorizationCodeFlow();\n  }\n\n  private ensureConfigured(): Promise<void> {\n\n    if (!this._configurePromise) {\n      return this.configure();\n    }\n\n    return this._configurePromise;\n  }\n\n  private setApiAuthorization(token: string): void {\n\n    // Set authorization for API client\n    // see https://github.com/swagger-api/swagger-codegen/issues/3221#issuecomment-314757762\n\n    if (!this.apiConfiguration.apiKeys) {\n      this.apiConfiguration.apiKeys = {};\n    }\n\n    if (token === null) {\n      delete this.apiConfiguration.apiKeys['Authorization'];\n    } else {\n      this.apiConfiguration.apiKeys['Authorization'] = `Bearer ${token}`;\n    }\n\n  }\n\n  private validateState(state: string): boolean {\n\n    const savedState = this.oauthStorage.getItem('nonce');\n\n    if (savedState !== state) {\n      const err = 'getting access_token failed. wrong state/nonce.';\n      console.error(err, savedState, state);\n      return false;\n    }\n\n    return true;\n  }\n}\n","export * from './is-authenticated.guard';\nexport * from './auth.service';\nexport * from './add-oauth2-dummy-client-secret.interceptor';\n","import {\n  Injectable\n} from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from '@angular/router';\nimport {\n  Observable\n} from 'rxjs';\nimport {\n  AuthService\n} from './auth.service';\n\n/*\n * Guard to require authentication and trigger sign-in if unauthenticated\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsAuthenticatedGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable < boolean > | Promise < boolean > | boolean {\n\n    return this.authService.isSignedIn()\n      .then(signedIn => {\n\n        if (!signedIn) {\n          this.authService.signIn(state.url);\n          return false;\n        }\n\n        return true;\n      });\n  }\n}\n","module.exports = \"<footer class=\\\"coc-footer\\\" role=\\\"contentinfo\\\">\\n  <div class=\\\"coc-footer-container\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-auto\\\">\\n        <a class=\\\"coc-footer-logo\\\" href=\\\"/\\\">\\n          <img src=\\\"./assets/images/coc-footer-logo.png\\\" class=\\\"img-fluid\\\"  alt=\\\"city of chandler\\\">\\n        </a>\\n      </div>\\n\\n      <div class=\\\"col pl-md-0\\\">\\n        <div class=\\\"coc-footer-menu row\\\">\\n          <div class=\\\"coc-footer-contact col-12 col-md-auto\\\">\\n            <p>Official Website of the City of Chandler, Arizona</p>\\n            <p><a href=\\\"tel:1-480-782-2000\\\">480-782-2000</a></p>\\n          </div>\\n    \\n          <div class=\\\"col-12 col-md-auto text-md-right ml-md-auto mt-md-3\\\">\\n            <ul class=\\\"list-inline\\\">\\n              <li class=\\\"list-inline-item\\\"><a href=\\\"/contact-chandler-form\\\">Contact</a></li>\\n              <li class=\\\"list-inline-item\\\"><a href=\\\"/accessibility-policy\\\">Accessibility</a></li>\\n            </ul>\\n            <a class=\\\"coc-scroll-top\\\" href=\\\"#\\\" title=\\\"Scroll to top\\\">\\n              <img src=\\\"./assets/images/scroll-top.png\\\" class=\\\"img-fluid\\\"  alt=\\\"Scroll to top\\\">\\n            </a>\\n          </div>\\n        </div>\\n    \\n        <div class=\\\"coc-footer-copyright row\\\">\\n          <div class=\\\"col-12 col-md-auto\\\">\\n            <p>© 2018 Copyright Chandler, Arizona. All Rights Reserved.</p>\\n          </div>\\n          <div class=\\\"col-12 col-md-auto ml-md-auto\\\">\\n            <ul class=\\\"list-inline\\\">\\n              <li class=\\\"list-inline-item\\\"><a href=\\\"/sitemap\\\">Sitemap</a></li>\\n              <li class=\\\"list-inline-item\\\"><a href=\\\"/privacy-policy\\\">Privacy Policy</a></li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  \\n  </div>\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'coc-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/* \"Barrel\" of Http Interceptors */\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AddOauth2DummyClientSecretInterceptor } from '../auth';\n\n/** Http interceptor providers in outside-in order */\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AddOauth2DummyClientSecretInterceptor, multi: true },\n];\n","module.exports = \"<header class=\\\"coc-navbar-header fixed-top\\\" role=\\\"banner\\\">\\n\\n  <nav\\n    role=\\\"navigation\\\"\\n    aria-labelledby=\\\"navbarUtilityHeading\\\"\\n    id=\\\"navbarUtility\\\"\\n    class=\\\"coc-navbar-utility\\\">\\n    <h2 class=\\\"sr-only\\\" id=\\\"navbarUtilityHeading\\\">Utility Menu</h2>\\n    <div class=\\\"navbar\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a\\n            href=\\\"#\\\"\\n            class=\\\"nav-link dropdown-toggle\\\"\\n            id=\\\"navbarDropdownPay\\\"\\n            role=\\\"button\\\"\\n            data-toggle=\\\"dropdown\\\"\\n            aria-haspopup=\\\"true\\\"\\n            aria-expanded=\\\"false\\\">\\n            Pay\\n            <span class=\\\"caret\\\"></span>\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdownPay\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Airport Hangar &amp; Tiedown Fees</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Alarm Permits &amp; Fees</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Business Registration/License Renewal</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Classes &amp; Lessons</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Fire Operations/Training Fees</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Fire Prevention Permit Fees</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Park &amp; Facility Rentals</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Permits &amp; Plan Review Fees</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Police Cadet Fees</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Utility Services</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Jobs</a>\\n          </div>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Jobs</a>\\n        </li>\\n        <li class=\\\"nav-item d-none d-md-inline-block\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Contact</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">A-Z</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Translate</a>\\n        </li>\\n        <li class=\\\"nav-item d-none d-md-inline-block\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">News</a>\\n        </li>\\n        <li class=\\\"nav-item d-none d-md-inline-block\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Text Size</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Search</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n  <nav class=\\\"coc-navbar-main\\\">\\n    <div class=\\\"navbar navbar-expand-lg\\\">\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\" title=\\\"Home\\\">\\n        <img src=\\\"./assets/images/coc-navbar-logo.svg\\\" class=\\\"navbar-brand-logo\\\" alt=\\\"\\\">\\n        <span class=\\\"d-none\\\">City of Chandler</span>\\n      </a>\\n      <button\\n        class=\\\"navbar-toggler\\\"\\n        type=\\\"button\\\"\\n        data-toggle=\\\"collapse\\\"\\n        data-target=\\\"#navbarNavAltMarkup\\\"\\n        aria-controls=\\\"navbarNavAltMarkup\\\"\\n        aria-expanded=\\\"false\\\"\\n        aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"d-none d-sm-inline-block mr-3\\\">Menu</span>\\n        <span class=\\\"navbar-toggler-icon fas fa-bars\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarMain\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Explore</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Residents</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Business</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Government</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n\\n</header>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'coc-navbar',\n  templateUrl: './navbar.component.html'\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CollapseModule.forRoot(),\n    ModalModule.forRoot(),\n    TooltipModule.forRoot()\n  ],\n  exports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CollapseModule,\n    ModalModule,\n    TooltipModule\n  ]\n})\nexport class SharedModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'coc-temp',\n  template: `\n    <div class=\"container mt-6 mb-9\">\n      <h1>\n        City of Chandler Business Registration & License Portal\n      </h1>\n      <h2>Modules</h2>\n      <ul>\n        <li>\n          <a routerLink=\"wizard\">Wizard</a>\n        </li>\n        <li>\n          <a routerLink=\"dashboard\">Dashboard</a>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class TempComponent {\n\n}\n","module.exports = \"<p>\\n  ui-kit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'coc-ui-kit',\n  templateUrl: './ui-kit.component.html'\n})\nexport class UiKitComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  API_BASE_PATH: 'http://localhost:3003/api/v1',\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}