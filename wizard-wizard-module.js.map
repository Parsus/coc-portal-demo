{"version":3,"sources":["webpack:///./node_modules/@angular/cdk/esm5/a11y.es5.js","webpack:///./node_modules/@angular/cdk/esm5/bidi.es5.js","webpack:///./node_modules/@angular/cdk/esm5/coercion.es5.js","webpack:///./node_modules/@angular/cdk/esm5/keycodes.es5.js","webpack:///./node_modules/@angular/cdk/esm5/observers.es5.js","webpack:///./node_modules/@angular/cdk/esm5/platform.es5.js","webpack:///./node_modules/@angular/cdk/esm5/stepper.es5.js","webpack:///./node_modules/ngx-webstorage-service/fesm5/ngx-webstorage-service.js","webpack:///./src/app/shared/web-storage.service.ts","webpack:///./src/app/wizard/address-verification/address-verification.component.html","webpack:///./src/app/wizard/address-verification/address-verification.component.ts","webpack:///./src/app/wizard/configuration/configuration.constants.ts","webpack:///./src/app/wizard/configuration/configuration.service.ts","webpack:///./src/app/wizard/goodbye/goodbye.component.html","webpack:///./src/app/wizard/goodbye/goodbye.component.ts","webpack:///./src/app/wizard/progress-bar/progress-bar.component.html","webpack:///./src/app/wizard/progress-bar/progress-bar.component.ts","webpack:///./src/app/wizard/question/index.ts","webpack:///./src/app/wizard/question/question-checkbox.ts","webpack:///./src/app/wizard/question/question-datepicker.ts","webpack:///./src/app/wizard/question/question-dropdown.ts","webpack:///./src/app/wizard/question/question-radio.ts","webpack:///./src/app/wizard/question/question-textarea.ts","webpack:///./src/app/wizard/question/question-textbox.ts","webpack:///./src/app/wizard/question/question.component.html","webpack:///./src/app/wizard/question/question.component.ts","webpack:///./src/app/wizard/question/question.ts","webpack:///./src/app/wizard/step/step.component.html","webpack:///./src/app/wizard/step/step.component.ts","webpack:///./src/app/wizard/stepper/stepper.component.html","webpack:///./src/app/wizard/stepper/stepper.component.ts","webpack:///./src/app/wizard/summary-item/summary-item.component.html","webpack:///./src/app/wizard/summary-item/summary-item.component.ts","webpack:///./src/app/wizard/wizard-helpers.ts","webpack:///./src/app/wizard/wizard-routing.module.ts","webpack:///./src/app/wizard/wizard.component.html","webpack:///./src/app/wizard/wizard.component.ts","webpack:///./src/app/wizard/wizard.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AACoJ;AAC5J;AAC4E;AACvD;AACpC;AACgE;AACrB;AACH;;AAE1E;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,wCAAwC,uCAAuC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,iDAAiD,yBAAyB,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+CAA+C,EAAE;AACjD;AACA,oBAAoB,EAAE;AACtB,sCAAsC,oDAAoD;AAC1F;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mCAAmC,mDAAmD,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,gDAAgD;AAChD,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3E,MAAM;AACN,uDAAuD,sEAAgB,EAAE,4CAA4C,0BAA0B,4DAAM,CAAC,wDAAQ,GAAG,EAAE,4CAA4C;AAC/M;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAQ,QAAQ,sDAAQ;AACrC,oBAAoB,EAAE,KAAK,wDAAQ;AACnC;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C,sCAAsC,iDAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,sBAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA,8BAA8B,uDAAS;AACvC;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oCAAoC,mBAAmB;AACvD,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,gBAAgB;AACjD,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,0CAA0C,wBAAwB;AAClE,wBAAwB,EAAE,yCAAyC,EAAE,yCAAyC,4CAA4C,EAAE;AAC5J;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,oBAAoB,EAAE,iDAAiD,EAAE,kCAAkC,0DAAG,qBAAqB,oBAAoB,EAAE,2CAA2C,EAAE,GAAG,mEAAY,oBAAoB,6DAAM,cAAc,oBAAoB,EAAE,wCAAwC,EAAE,GAAG,0DAAG,cAAc,oBAAoB,EAAE,sCAAsC,EAAE;AAC/Y,uBAAuB,EAAE;AACzB,oCAAoC,EAAE;AACtC;AACA;AACA,2BAA2B,sBAAsB;AACjD,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C,2BAA2B,EAAE;AAC7B;AACA,iCAAiC,EAAE;AACnC,gCAAgC,EAAE;AAClC,gCAAgC,EAAE;AAClC;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B,SAAS;AACT,2BAA2B,EAAE;AAC7B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,SAAS;AACT;AACA,iBAAiB,yDAAG;AACpB;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4EAAc;AACvD;AACA;AACA;AACA;AACA;AACA,yCAAyC,uDAAC,eAAe,uDAAC,iBAAiB,0DAAI,eAAe,0DAAI;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,mBAAmB;AAC1C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sCAAsC,uDAAS;AAC/C;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,8DAAQ;AACxB,MAAM;AACN,8DAA8D,sEAAgB,EAAE,mDAAmD,iCAAiC,4DAAM,CAAC,8DAAQ,GAAG,EAAE,mDAAmD;AAC3O;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yCAAyC;AAC1F,+CAA+C,0CAA0C;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA,SAAS;AACT;AACA,8DAA8D,EAAE;AAChE,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gDAAgD,6CAA6C,EAAE;AAC/F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gDAAgD,mDAAmD,EAAE;AACrG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gDAAgD,kDAAkD,EAAE;AACpG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+DAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,qBAAqB;AAC5C,uBAAuB,EAAE;AACzB;AACA,0DAA0D,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,yCAAyC,QAAQ;AACjD,uBAAuB,EAAE;AACzB;AACA,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,2DAAI;AAC1D;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,mDAAmD;AACnD,SAAS,6BAA6B;AACtC,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3E,MAAM;AACN,0DAA0D,sEAAgB,EAAE,+CAA+C,6BAA6B,4DAAM,wBAAwB,4DAAM,CAAC,oDAAM,GAAG,4DAAM,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AACzQ;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,+BAA+B,EAAE;AACtD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,0BAA0B,mFAAqB,QAAQ,EAAE;AACnF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,0BAA0B,EAAE;AACjD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,qBAAqB,mFAAqB,QAAQ,EAAE;AAC9E;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,yBAAyB;AAClC,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3E,MAAM;AACN;AACA,mBAAmB,OAAO,mDAAK,2BAA2B;AAC1D,uBAAuB,OAAO,mDAAK,sCAAsC;AACzE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA,WAAW,EAAE;AACb,uCAAuC,4DAAc;AACrD;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,sBAAsB,EAAE;AACjG;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,6BAA6B;AACpD,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,gDAAgD;AAChD,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,yCAAyC,GAAG;AACtH,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3E,MAAM;AACN,uDAAuD,sEAAgB,EAAE,4CAA4C,0BAA0B,4DAAM,mCAAmC,4DAAM,CAAC,oDAAM,GAAG,4DAAM,CAAC,wDAAQ,GAAG,EAAE,4CAA4C;AACxQ;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,yBAAyB,EAAE;AAChD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,sBAAsB;AAC/B,SAAS,OAAO,sEAAe,EAAE;AACjC,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN;AACA,sBAAsB,OAAO,mDAAK,0BAA0B;AAC5D;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAQ,QAAQ,sDAAQ;AACrC,aAAa,sDAAQ,QAAQ,oDAAM;AACnC,QAAQ,wDAAQ;AAChB,QAAQ,oDAAM;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,kCAAkC,6FAA+B;AACjE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,sCAAsC,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,qCAAqC,EAAE;AACzG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uCAAuC,uBAAuB;AAC9D;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,4BAA4B,2EAAa;AACzC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB,EAAE;AAC1B,+BAA+B,EAAE;AACjC;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mCAAmC,EAAE;AACrC;AACA,yBAAyB,4CAAO;AAChC;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,8CAA8C,6CAA6C;AAC3F,mBAAmB,EAAE;AACrB,6CAA6C,4CAA4C;AACzF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,2EAAa;AACzC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,2EAAa;AACzC;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,6DAA6D,sCAAsC,EAAE;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,6BAA6B,EAAE;AAC5F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC,6BAA6B,EAAE;AACrE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,+CAA+C;AAC/C,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,OAAO,8DAAQ;AACxB,MAAM;AACN,sDAAsD,sEAAgB,EAAE,2CAA2C,yBAAyB,4DAAM,CAAC,oDAAM,GAAG,4DAAM,CAAC,8DAAQ,GAAG,EAAE,2CAA2C;AAC3N;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA,0CAA0C,0CAA0C,EAAE;AACtF;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS;AACT,MAAM;AACN;AACA,0BAA0B,OAAO,oDAAM,EAAE;AACzC;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,gBAAgB,sDAAQ,QAAQ,sDAAQ,mBAAmB,oDAAM,EAAE,8DAAQ;AAC3E;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY,EAAE,oEAAc,EAAE,sEAAe;AAC3E;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEklB;AACllB;;;;;;;;;;;;;ACr0FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2C;AAC8G;;AAEzJ;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,uBAAuB,4DAAc;AACrC;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA,WAAW,4DAAM,CAAC,wDAAQ;AAC1B;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,iDAAiD;AACjD,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,yBAAyB;AACnG,MAAM;AACN,wDAAwD,sEAAgB,EAAE,6CAA6C,2BAA2B,4DAAM,mBAAmB,EAAE,6CAA6C;AAC1N;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,kBAAkB,EAAE;AACzC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iCAAiC,4CAA4C;AAC7E,2BAA2B,0BAA0B;AACrD;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kBAAkB,OAAO,oDAAM,wBAAwB;AACvD,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEqF;AACrF;;;;;;;;;;;;;ACvNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2C;;AAE3C;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE;AAC3C;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mCAAmC,wDAAU;AAC7C;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEwH;AACxcAAc,uEAAuE;AACrF;;AAEA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,mDAAmD,wBAAwB,EAAE;AAC7E;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAE6+B;AAC7+B;;;;;;;;;;;;;ACnSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACmG;AACwC;AAChG;AACG;;AAE9C;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA,iEAAiE,sEAAgB,EAAE,sDAAsD,sCAAsC,EAAE,sDAAsD;AACvO;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8DAA8D,wCAAwC,EAAE;AACxG;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,2EAAa;AACnC,eAAe,+CAAU;AACzB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,+BAA+B,4CAAO;AACtC,uBAAuB,EAAE;AACzB,sFAAsF,iCAAiC,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iDAAiD,iDAAiD;AAClG;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,kDAAkD;AAClD,SAAS;AACT,MAAM;AACN,yDAAyD,sEAAgB,EAAE,8CAA8C,4BAA4B,4DAAM,2BAA2B,EAAE,8CAA8C;AACtO;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,kFAAoB;AACjD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mEAAY;AAC1D,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,wBAAwB;AACjC,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN;AACA,iBAAiB,OAAO,oDAAM,gCAAgC;AAC9D,oBAAoB,OAAO,mDAAK,wCAAwC;AACxE,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEwF;AACxF;;;;;;;;;;;;;AC/UA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8G;AAC1D;;AAEpD;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA,WAAW,EAAE;AACb,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,2CAA2C;AAC3C,SAAS,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,yDAAW,IAAI;AAC/F,MAAM;AACN,kDAAkD,sEAAgB,EAAE,uCAAuC,qBAAqB,4DAAM,CAAC,yDAAW,MAAM,EAAE,uCAAuC;AACjM;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ,WAAW,IAAI;AACvC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,wDAAwD,EAAE,qCAAqC;AAC/F,kCAAkC,qCAAqC;AACvE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,6EAA6E,EAAE;AAC/E;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAE6L;AAC7L;;;;;;;;;;;;;ACtTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4Q;AACxN;AACW;AACD;AACkB;AACvB;AACjC;AACW;AACmB;;AAEtD;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,OAAO,yDAAW;AAC3B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,iCAAiC,4DAAc;AAC/C;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oCAAoC,mFAAqB;AACzD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gCAAgC,mFAAqB;AACrD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS,UAAU;AACnC;AACA;AACA,mCAAmC,+DAAiB;AACpD,qCAAqC,qEAAuB;AAC5D,iBAAiB,IAAI;AACrB;AACA;AACA,0CAA0C;AAC1C,SAAS,iCAAiC,OAAO,oDAAM,SAAS,gEAAU,cAAc,mBAAmB,EAAE,KAAK,GAAG;AACrH,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,mCAAmC;AAC7G,MAAM;AACN;AACA,qBAAqB,OAAO,0DAAY,yBAAyB;AACjE,mBAAmB,OAAO,uDAAS,SAAS,yDAAW,IAAI;AAC3D,uBAAuB,OAAO,mDAAK,EAAE;AACrC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,wBAAwB,OAAO,mDAAK,EAAE;AACtC,qBAAqB,OAAO,mDAAK,yBAAyB;AAC1D,0BAA0B,OAAO,mDAAK,8BAA8B;AACpE,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,qBAAqB,EAAE;AAC5C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,gBAAgB,mFAAqB,QAAQ,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,4BAA4B,EAAE;AACnD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,yFAAyF,EAAE;AAC3F,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iEAAe;AAC9C;AACA;AACA,iCAAiC,EAAE,0BAA0B,+CAAE;AAC/D,kBAAkB,gEAAS,2BAA2B,gEAAS;AAC/D,6CAA6C,+DAA+D,EAAE;AAC9G;AACA,iCAAiC,gEAAS;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,6CAA6C,qBAAqB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,2BAA2B;AAC1D,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,4EAAc;AACxC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,yBAAyB,2DAAK,gBAAgB,2DAAK;AACnD;AACA;AACA;AACA,6BAA6B,0DAAI;AACjC;AACA;AACA;AACA,6BAA6B,yDAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6CAA6C;AAC7C,SAAS,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAClE,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3E,MAAM;AACN;AACA,kBAAkB,OAAO,6DAAe,oBAAoB;AAC5D,uBAAuB,OAAO,6DAAe,0BAA0B;AACvE,kBAAkB,OAAO,mDAAK,EAAE;AAChC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS;AACT,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS;AACT,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAU,EAAE,4DAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEyM;AACzM;;;;;;;;;;;;;ACl2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACuB;;AAEzD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,0BAA0B,4DAAc,qBAAqB,qDAAqD;AAClH;AACA,YAAY;AACZ;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,wBAAwB,4DAAc,mBAAmB,mDAAmD;;AAE5G;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE2U;;AAE3U,kD;;;;;;;;;;;;;;;;;;AC74BmD;AAEsB;AAEzE,IAAM,eAAe,GAAG,kBAAkB,CAAC;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","file":"wizard-wizard-module.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Inject, Injectable, Optional, SkipSelf, QueryList, Directive, ElementRef, Input, NgZone, isDevMode, InjectionToken, EventEmitter, Output, NgModule, defineInjectable, inject } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, TAB, A, Z, ZERO, NINE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { debounceTime, filter, map, tap, take } from 'rxjs/operators';\nimport { __extends } from 'tslib';\nimport { Platform, normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * IDs are deliminated by an empty space, as per the spec.\n * @type {?}\n */\nvar ID_DELIMINATOR = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    var ids = getAriaReferenceIds(el, attr);\n    if (ids.some(function (existingId) { return existingId.trim() == id.trim(); })) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    var ids = getAriaReferenceIds(el, attr);\n    /** @type {?} */\n    var filteredIds = ids.filter(function (val) { return val != id.trim(); });\n    el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace deliminated) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * ID used for the body container where all messages are appended.\n * @type {?}\n */\nvar MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @type {?}\n */\nvar CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @type {?}\n */\nvar CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n * @type {?}\n */\nvar nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n * @type {?}\n */\nvar messageRegistry = new Map();\n/**\n * Container for all registered messages.\n * @type {?}\n */\nvar messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n * \\@docs-private\n */\nvar AriaDescriber = /** @class */ (function () {\n    function AriaDescriber(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     */\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype.describe = /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    function (hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    };\n    /** Removes the host element's aria-describedby reference to the message element. */\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype.removeDescription = /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    function (hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        /** @type {?} */\n        var registeredMessage = messageRegistry.get(message);\n        if (registeredMessage && registeredMessage.referenceCount === 0) {\n            this._deleteMessageElement(message);\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    };\n    /** Unregisters all created message elements and removes the message container. */\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    AriaDescriber.prototype.ngOnDestroy = /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var describedElements = this._document.querySelectorAll(\"[\" + CDK_DESCRIBEDBY_HOST_ATTRIBUTE + \"]\");\n        for (var i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    };\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._createMessageElement = /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        /** @type {?} */\n        var messageElement = this._document.createElement('div');\n        messageElement.setAttribute('id', CDK_DESCRIBEDBY_ID_PREFIX + \"-\" + nextId++);\n        messageElement.appendChild((/** @type {?} */ (this._document.createTextNode(message))));\n        this._createMessagesContainer();\n        (/** @type {?} */ (messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement: messageElement, referenceCount: 0 });\n    };\n    /** Deletes the message element from the global messages container. */\n    /**\n     * Deletes the message element from the global messages container.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._deleteMessageElement = /**\n     * Deletes the message element from the global messages container.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        /** @type {?} */\n        var registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        var messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    };\n    /** Creates the global container for all aria-describedby messages. */\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @private\n     * @return {?}\n     */\n    AriaDescriber.prototype._createMessagesContainer = /**\n     * Creates the global container for all aria-describedby messages.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!messagesContainer) {\n            /** @type {?} */\n            var preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                (/** @type {?} */ (preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    };\n    /** Deletes the global messages container. */\n    /**\n     * Deletes the global messages container.\n     * @private\n     * @return {?}\n     */\n    AriaDescriber.prototype._deleteMessagesContainer = /**\n     * Deletes the global messages container.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    };\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    AriaDescriber.prototype._removeCdkDescribedByReferenceIds = /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        /** @type {?} */\n        var originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter(function (id) { return id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0; });\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    };\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._addMessageReference = /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        /** @type {?} */\n        var registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    };\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._removeMessageReference = /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        /** @type {?} */\n        var registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    };\n    /** Returns true if the element has been described by the provided message ID. */\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._isElementDescribedByMessage = /**\n     * Returns true if the element has been described by the provided message ID.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        /** @type {?} */\n        var referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        /** @type {?} */\n        var registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        var messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    };\n    /** Determines whether a message can be described on a particular element. */\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._canBeDescribed = /**\n     * Determines whether a message can be described on a particular element.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        return element.nodeType === this._document.ELEMENT_NODE && message != null &&\n            !!(\"\" + message).trim();\n    };\n    AriaDescriber.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    AriaDescriber.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ AriaDescriber.ngInjectableDef = defineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(inject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\n    return AriaDescriber;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction ARIA_DESCRIBER_PROVIDER_FACTORY(parentDispatcher, _document) {\n    return parentDispatcher || new AriaDescriber(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nvar ARIA_DESCRIBER_PROVIDER = {\n    // If there is already an AriaDescriber available, use that. Otherwise, provide a new one.\n    provide: AriaDescriber,\n    deps: [\n        [new Optional(), new SkipSelf(), AriaDescriber],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: ARIA_DESCRIBER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nvar  /**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nListKeyManager = /** @class */ (function () {\n    function ListKeyManager(_items) {\n        var _this = this;\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = function (item) { return item.disabled; };\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe(function (newItems) {\n                if (_this._activeItem) {\n                    /** @type {?} */\n                    var itemArray = newItems.toArray();\n                    /** @type {?} */\n                    var newIndex = itemArray.indexOf(_this._activeItem);\n                    if (newIndex > -1 && newIndex !== _this._activeItemIndex) {\n                        _this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {THIS}\n     */\n    ListKeyManager.prototype.skipPredicate = /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {THIS}\n     */\n    function (predicate) {\n        (/** @type {?} */ (this))._skipPredicateFn = predicate;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {THIS}\n     */\n    ListKeyManager.prototype.withWrap = /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {THIS}\n     */\n    function (shouldWrap) {\n        if (shouldWrap === void 0) { shouldWrap = true; }\n        (/** @type {?} */ (this))._wrap = shouldWrap;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {THIS}\n     */\n    ListKeyManager.prototype.withVerticalOrientation = /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {THIS}\n     */\n    function (enabled) {\n        if (enabled === void 0) { enabled = true; }\n        (/** @type {?} */ (this))._vertical = enabled;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {THIS}\n     */\n    ListKeyManager.prototype.withHorizontalOrientation = /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {THIS}\n     */\n    function (direction) {\n        (/** @type {?} */ (this))._horizontal = direction;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} keys\n     * @return {THIS}\n     */\n    ListKeyManager.prototype.withAllowedModifierKeys = /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} keys\n     * @return {THIS}\n     */\n    function (keys) {\n        (/** @type {?} */ (this))._allowedModifierKeys = keys;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {THIS}\n     */\n    ListKeyManager.prototype.withTypeAhead = /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {THIS}\n     */\n    function (debounceInterval) {\n        var _this = this;\n        if (debounceInterval === void 0) { debounceInterval = 200; }\n        if ((/** @type {?} */ (this))._items.length && (/** @type {?} */ (this))._items.some(function (item) { return typeof item.getLabel !== 'function'; })) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        (/** @type {?} */ (this))._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        (/** @type {?} */ (this))._typeaheadSubscription = (/** @type {?} */ (this))._letterKeyStream.pipe(tap(function (keyCode) { return (/** @type {?} */ (_this))._pressedLetters.push(keyCode); }), debounceTime(debounceInterval), filter(function () { return (/** @type {?} */ (_this))._pressedLetters.length > 0; }), map(function () { return (/** @type {?} */ (_this))._pressedLetters.join(''); })).subscribe(function (inputString) {\n            /** @type {?} */\n            var items = (/** @type {?} */ (_this))._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (var i = 1; i < items.length + 1; i++) {\n                /** @type {?} */\n                var index = ((/** @type {?} */ (_this))._activeItemIndex + i) % items.length;\n                /** @type {?} */\n                var item = items[index];\n                if (!(/** @type {?} */ (_this))._skipPredicateFn(item) &&\n                    (/** @type {?} */ (item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    (/** @type {?} */ (_this)).setActiveItem(index);\n                    break;\n                }\n            }\n            (/** @type {?} */ (_this))._pressedLetters = [];\n        });\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ListKeyManager.prototype.setActiveItem = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        /** @type {?} */\n        var previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    };\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    ListKeyManager.prototype.onKeydown = /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        /** @type {?} */\n        var keyCode = event.keyCode;\n        /** @type {?} */\n        var modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        /** @type {?} */\n        var isModifierAllowed = modifiers.every(function (modifier) {\n            return !event[modifier] || _this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    };\n    Object.defineProperty(ListKeyManager.prototype, \"activeItemIndex\", {\n        /** Index of the currently active item. */\n        get: /**\n         * Index of the currently active item.\n         * @return {?}\n         */\n        function () {\n            return this._activeItemIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListKeyManager.prototype, \"activeItem\", {\n        /** The active item. */\n        get: /**\n         * The active item.\n         * @return {?}\n         */\n        function () {\n            return this._activeItem;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Sets the active item to the first enabled item in the list. */\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setFirstItemActive = /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._setActiveItemByIndex(0, 1);\n    };\n    /** Sets the active item to the last enabled item in the list. */\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setLastItemActive = /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    };\n    /** Sets the active item to the next enabled item in the list. */\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setNextItemActive = /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    };\n    /** Sets the active item to a previous enabled item in the list. */\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setPreviousItemActive = /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ListKeyManager.prototype.updateActiveItem = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        /** @type {?} */\n        var itemArray = this._getItemsArray();\n        /** @type {?} */\n        var index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        /** @type {?} */\n        var activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    };\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @param index The new activeItemIndex.\n     * @deprecated Use `updateActiveItem` instead.\n     * @breaking-change 8.0.0\n     */\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @deprecated Use `updateActiveItem` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    ListKeyManager.prototype.updateActiveItemIndex = /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @deprecated Use `updateActiveItem` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    function (index) {\n        this.updateActiveItem(index);\n    };\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByDelta = /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    };\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInWrapMode = /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        /** @type {?} */\n        var items = this._getItemsArray();\n        for (var i = 1; i <= items.length; i++) {\n            /** @type {?} */\n            var index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            /** @type {?} */\n            var item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    };\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInDefaultMode = /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    };\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @private\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByIndex = /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @private\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    function (index, fallbackDelta) {\n        /** @type {?} */\n        var items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    };\n    /** Returns the items as an array. */\n    /**\n     * Returns the items as an array.\n     * @private\n     * @return {?}\n     */\n    ListKeyManager.prototype._getItemsArray = /**\n     * Returns the items as an array.\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    };\n    return ListKeyManager;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nvar  /**\n * @template T\n */\nActiveDescendantKeyManager = /** @class */ (function (_super) {\n    __extends(ActiveDescendantKeyManager, _super);\n    function ActiveDescendantKeyManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ActiveDescendantKeyManager.prototype.setActiveItem = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        _super.prototype.setActiveItem.call(this, index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    };\n    return ActiveDescendantKeyManager;\n}(ListKeyManager));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nvar  /**\n * @template T\n */\nFocusKeyManager = /** @class */ (function (_super) {\n    __extends(FocusKeyManager, _super);\n    function FocusKeyManager() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._origin = 'program';\n        return _this;\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {THIS}\n     */\n    FocusKeyManager.prototype.setFocusOrigin = /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {THIS}\n     */\n    function (origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    FocusKeyManager.prototype.setActiveItem = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        _super.prototype.setActiveItem.call(this, item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    };\n    return FocusKeyManager;\n}(ListKeyManager));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nvar InteractivityChecker = /** @class */ (function () {\n    function InteractivityChecker(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    InteractivityChecker.prototype.isDisabled = /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    function (element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    };\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    InteractivityChecker.prototype.isVisible = /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    function (element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    };\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    InteractivityChecker.prototype.isTabbable = /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    function (element) {\n        // Nothing is tabbable on the the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        /** @type {?} */\n        var frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            /** @type {?} */\n            var frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        /** @type {?} */\n        var nodeName = element.nodeName.toLowerCase();\n        /** @type {?} */\n        var tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    };\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is focusable.\n     */\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    InteractivityChecker.prototype.isFocusable = /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    function (element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    };\n    InteractivityChecker.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    InteractivityChecker.ctorParameters = function () { return [\n        { type: Platform }\n    ]; };\n    /** @nocollapse */ InteractivityChecker.ngInjectableDef = defineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(inject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\n    return InteractivityChecker;\n}());\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return (/** @type {?} */ (window.frameElement));\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    /** @type {?} */\n    var nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    /** @type {?} */\n    var tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    /** @type {?} */\n    var tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    /** @type {?} */\n    var nodeName = element.nodeName.toLowerCase();\n    /** @type {?} */\n    var inputType = nodeName === 'input' && ((/** @type {?} */ (element))).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nvar  /**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nFocusTrap = /** @class */ (function () {\n    function FocusTrap(_element, _checker, _ngZone, _document, deferAnchors) {\n        if (deferAnchors === void 0) { deferAnchors = false; }\n        var _this = this;\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this._startAnchorListener = function () { return _this.focusLastTabbableElement(); };\n        this._endAnchorListener = function () { return _this.focusFirstTabbableElement(); };\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    Object.defineProperty(FocusTrap.prototype, \"enabled\", {\n        /** Whether the focus trap is active. */\n        get: /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        function () { return this._enabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._enabled = value;\n            if (this._startAnchor && this._endAnchor) {\n                this._toggleAnchorTabIndex(value, this._startAnchor);\n                this._toggleAnchorTabIndex(value, this._endAnchor);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Destroys the focus trap by cleaning up the anchors. */\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    FocusTrap.prototype.destroy = /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var startAnchor = this._startAnchor;\n        /** @type {?} */\n        var endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this._startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this._endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n    };\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    FocusTrap.prototype.attachAnchors = /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    function () {\n        var _this = this;\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(function () {\n            if (!_this._startAnchor) {\n                _this._startAnchor = _this._createAnchor();\n                (/** @type {?} */ (_this._startAnchor)).addEventListener('focus', _this._startAnchorListener);\n            }\n            if (!_this._endAnchor) {\n                _this._endAnchor = _this._createAnchor();\n                (/** @type {?} */ (_this._endAnchor)).addEventListener('focus', _this._endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    };\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusInitialElementWhenReady = /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._executeOnStable(function () { return resolve(_this.focusInitialElement()); });\n        });\n    };\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusFirstTabbableElementWhenReady = /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._executeOnStable(function () { return resolve(_this.focusFirstTabbableElement()); });\n        });\n    };\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusLastTabbableElementWhenReady = /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._executeOnStable(function () { return resolve(_this.focusLastTabbableElement()); });\n        });\n    };\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @private\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    FocusTrap.prototype._getRegionBoundary = /**\n     * Get the specified boundary element of the trapped region.\n     * @private\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    function (bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        var markers = (/** @type {?} */ (this._element.querySelectorAll(\"[cdk-focus-region-\" + bound + \"], \" +\n            (\"[cdkFocusRegion\" + bound + \"], \") +\n            (\"[cdk-focus-\" + bound + \"]\"))));\n        for (var i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(\"cdk-focus-\" + bound)) {\n                console.warn(\"Found use of deprecated attribute 'cdk-focus-\" + bound + \"', \" +\n                    (\"use 'cdkFocusRegion\" + bound + \"' instead. The deprecated \") +\n                    \"attribute will be removed in 8.0.0.\", markers[i]);\n            }\n            else if (markers[i].hasAttribute(\"cdk-focus-region-\" + bound)) {\n                console.warn(\"Found use of deprecated attribute 'cdk-focus-region-\" + bound + \"', \" +\n                    (\"use 'cdkFocusRegion\" + bound + \"' instead. The deprecated attribute \") +\n                    \"will be removed in 8.0.0.\", markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    };\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusInitialElement = /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    function () {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        var redirectToElement = (/** @type {?} */ (this._element.querySelector(\"[cdk-focus-initial], \" +\n            \"[cdkFocusInitial]\")));\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(\"cdk-focus-initial\")) {\n                console.warn(\"Found use of deprecated attribute 'cdk-focus-initial', \" +\n                    \"use 'cdkFocusInitial' instead. The deprecated attribute \" +\n                    \"will be removed in 8.0.0\", redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if (isDevMode() && !this._checker.isFocusable(redirectToElement)) {\n                console.warn(\"Element matching '[cdkFocusInitial]' is not focusable.\", redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    };\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusFirstTabbableElement = /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    function () {\n        /** @type {?} */\n        var redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    };\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusLastTabbableElement = /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    function () {\n        /** @type {?} */\n        var redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    };\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     */\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    FocusTrap.prototype.hasAttached = /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    function () {\n        return this._hasAttached;\n    };\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getFirstTabbableElement = /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        /** @type {?} */\n        var children = root.children || root.childNodes;\n        for (var i = 0; i < children.length; i++) {\n            /** @type {?} */\n            var tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getLastTabbableElement = /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        /** @type {?} */\n        var children = root.children || root.childNodes;\n        for (var i = children.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            var tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    /** Creates an anchor element. */\n    /**\n     * Creates an anchor element.\n     * @private\n     * @return {?}\n     */\n    FocusTrap.prototype._createAnchor = /**\n     * Creates an anchor element.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        return anchor;\n    };\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @private\n     * @param {?} isEnabled Whether the focus trap is enabled.\n     * @param {?} anchor Anchor on which to toggle the tabindex.\n     * @return {?}\n     */\n    FocusTrap.prototype._toggleAnchorTabIndex = /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @private\n     * @param {?} isEnabled Whether the focus trap is enabled.\n     * @param {?} anchor Anchor on which to toggle the tabindex.\n     * @return {?}\n     */\n    function (isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    };\n    /** Executes a function when the zone is stable. */\n    /**\n     * Executes a function when the zone is stable.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    FocusTrap.prototype._executeOnStable = /**\n     * Executes a function when the zone is stable.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n        }\n    };\n    return FocusTrap;\n}());\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nvar FocusTrapFactory = /** @class */ (function () {\n    function FocusTrapFactory(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    FocusTrapFactory.prototype.create = /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    function (element, deferCaptureElements) {\n        if (deferCaptureElements === void 0) { deferCaptureElements = false; }\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    };\n    FocusTrapFactory.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    FocusTrapFactory.ctorParameters = function () { return [\n        { type: InteractivityChecker },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ FocusTrapFactory.ngInjectableDef = defineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(inject(InteractivityChecker), inject(NgZone), inject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\n    return FocusTrapFactory;\n}());\n/**\n * Directive for trapping focus within a region.\n */\nvar CdkTrapFocus = /** @class */ (function () {\n    function CdkTrapFocus(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    Object.defineProperty(CdkTrapFocus.prototype, \"enabled\", {\n        /** Whether the focus trap is active. */\n        get: /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        function () { return this.focusTrap.enabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.focusTrap.enabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkTrapFocus.prototype, \"autoCapture\", {\n        /**\n         * Whether the directive should automatially move focus into the trapped region upon\n         * initialization and return focus to the previous activeElement upon destruction.\n         */\n        get: /**\n         * Whether the directive should automatially move focus into the trapped region upon\n         * initialization and return focus to the previous activeElement upon destruction.\n         * @return {?}\n         */\n        function () { return this._autoCapture; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._autoCapture = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkTrapFocus.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkTrapFocus.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = (/** @type {?} */ (this._document.activeElement));\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkTrapFocus.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    };\n    CdkTrapFocus.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkTrapFocus.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: FocusTrapFactory },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    CdkTrapFocus.propDecorators = {\n        enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n        autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n    };\n    return CdkTrapFocus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// The token for the live announcer element is defined in a separate file from LiveAnnouncer\n// as a workaround for https://github.com/angular/angular/issues/22559\n/** @type {?} */\nvar LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar LiveAnnouncer = /** @class */ (function () {\n    function LiveAnnouncer(elementToken, _ngZone, _document) {\n        this._ngZone = _ngZone;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * @param {?} message\n     * @param {...?} args\n     * @return {?}\n     */\n    LiveAnnouncer.prototype.announce = /**\n     * @param {?} message\n     * @param {...?} args\n     * @return {?}\n     */\n    function (message) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        /** @type {?} */\n        var politeness;\n        /** @type {?} */\n        var duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            politeness = args[0], duration = args[1];\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', (/** @type {?} */ (politeness)) || 'polite');\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(function () {\n            return new Promise(function (resolve) {\n                clearTimeout(_this._previousTimeout);\n                _this._previousTimeout = setTimeout(function () {\n                    _this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        _this._previousTimeout = setTimeout(function () { return _this.clear(); }, duration);\n                    }\n                }, 100);\n            });\n        });\n    };\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     * @return {?}\n     */\n    LiveAnnouncer.prototype.clear = /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     * @return {?}\n     */\n    function () {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LiveAnnouncer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = (/** @type {?} */ (null));\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    LiveAnnouncer.prototype._createLiveElement = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var elementClass = 'cdk-live-announcer-element';\n        /** @type {?} */\n        var previousElements = this._document.getElementsByClassName(elementClass);\n        /** @type {?} */\n        var liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (var i = 0; i < previousElements.length; i++) {\n            (/** @type {?} */ (previousElements[i].parentNode)).removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    };\n    LiveAnnouncer.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    LiveAnnouncer.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ LiveAnnouncer.ngInjectableDef = defineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(inject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), inject(NgZone), inject(DOCUMENT)); }, token: LiveAnnouncer, providedIn: \"root\" });\n    return LiveAnnouncer;\n}());\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nvar CdkAriaLive = /** @class */ (function () {\n    function CdkAriaLive(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    Object.defineProperty(CdkAriaLive.prototype, \"politeness\", {\n        /** The aria-live politeness level to use when announcing messages. */\n        get: /**\n         * The aria-live politeness level to use when announcing messages.\n         * @return {?}\n         */\n        function () { return this._politeness; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var _this = this;\n            this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n            if (this._politeness === 'off') {\n                if (this._subscription) {\n                    this._subscription.unsubscribe();\n                    this._subscription = null;\n                }\n            }\n            else if (!this._subscription) {\n                this._subscription = this._ngZone.runOutsideAngular(function () {\n                    return _this._contentObserver\n                        .observe(_this._elementRef)\n                        .subscribe(function () {\n                        // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                        /** @type {?} */\n                        var elementText = _this._elementRef.nativeElement.textContent;\n                        // The `MutationObserver` fires also for attribute\n                        // changes which we don't want to announce.\n                        if (elementText !== _this._previousAnnouncedText) {\n                            _this._liveAnnouncer.announce(elementText, _this._politeness);\n                            _this._previousAnnouncedText = elementText;\n                        }\n                    });\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkAriaLive.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    };\n    CdkAriaLive.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkAriaLive.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: LiveAnnouncer },\n        { type: ContentObserver },\n        { type: NgZone }\n    ]; };\n    CdkAriaLive.propDecorators = {\n        politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n    };\n    return CdkAriaLive;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentAnnouncer\n * @param {?} liveElement\n * @param {?} _document\n * @param {?} ngZone\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_PROVIDER_FACTORY(parentAnnouncer, liveElement, _document, ngZone) {\n    return parentAnnouncer || new LiveAnnouncer(liveElement, ngZone, _document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nvar LIVE_ANNOUNCER_PROVIDER = {\n    // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n    provide: LiveAnnouncer,\n    deps: [\n        [new Optional(), new SkipSelf(), LiveAnnouncer],\n        [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n        DOCUMENT,\n        NgZone,\n    ],\n    useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\n/** @type {?} */\nvar TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also\n * mark the the listener as passive if the browser supports it.\n * @type {?}\n */\nvar captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nvar FocusMonitor = /** @class */ (function () {\n    function FocusMonitor(_ngZone, _platform) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = function () {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            _this._lastTouchTarget = null;\n            _this._setOriginForCurrentEventQueue('keyboard');\n        };\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = function () {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!_this._lastTouchTarget) {\n                _this._setOriginForCurrentEventQueue('mouse');\n            }\n        };\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = function (event) {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (_this._touchTimeoutId != null) {\n                clearTimeout(_this._touchTimeoutId);\n            }\n            _this._lastTouchTarget = event.target;\n            _this._touchTimeoutId = setTimeout(function () { return _this._lastTouchTarget = null; }, TOUCH_BUFFER_MS);\n        };\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = function () {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            _this._windowFocused = true;\n            _this._windowFocusTimeoutId = setTimeout(function () { return _this._windowFocused = false; });\n        };\n    }\n    /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    FocusMonitor.prototype.monitor = /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    function (element, checkChildren) {\n        var _this = this;\n        if (checkChildren === void 0) { checkChildren = false; }\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return of(null);\n        }\n        /** @type {?} */\n        var nativeElement = coerceElement(element);\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(nativeElement)) {\n            /** @type {?} */\n            var cachedInfo = this._elementInfo.get(nativeElement);\n            (/** @type {?} */ (cachedInfo)).checkChildren = checkChildren;\n            return (/** @type {?} */ (cachedInfo)).subject.asObservable();\n        }\n        // Create monitored element info.\n        /** @type {?} */\n        var info = {\n            unlisten: function () { },\n            checkChildren: checkChildren,\n            subject: new Subject()\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._incrementMonitoredElementCount();\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        /** @type {?} */\n        var focusListener = function (event) { return _this._onFocus(event, nativeElement); };\n        /** @type {?} */\n        var blurListener = function (event) { return _this._onBlur(event, nativeElement); };\n        this._ngZone.runOutsideAngular(function () {\n            nativeElement.addEventListener('focus', focusListener, true);\n            nativeElement.addEventListener('blur', blurListener, true);\n        });\n        // Create an unlisten function for later.\n        info.unlisten = function () {\n            nativeElement.removeEventListener('focus', focusListener, true);\n            nativeElement.removeEventListener('blur', blurListener, true);\n        };\n        return info.subject.asObservable();\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    FocusMonitor.prototype.stopMonitoring = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var nativeElement = coerceElement(element);\n        /** @type {?} */\n        var elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._decrementMonitoredElementCount();\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    FocusMonitor.prototype.focusVia = /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    function (element, origin, options) {\n        /** @type {?} */\n        var nativeElement = coerceElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            ((/** @type {?} */ (nativeElement))).focus(options);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FocusMonitor.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._elementInfo.forEach(function (_info, element) { return _this.stopMonitoring(element); });\n    };\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    FocusMonitor.prototype._toggleClass = /**\n     * @private\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    function (element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    };\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @private\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    FocusMonitor.prototype._setClasses = /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @private\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    function (element, origin) {\n        /** @type {?} */\n        var elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            this._toggleClass(element, 'cdk-focused', !!origin);\n            this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n            this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n            this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n            this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n        }\n    };\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @param origin The origin to set.\n     */\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @private\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    FocusMonitor.prototype._setOriginForCurrentEventQueue = /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @private\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    function (origin) {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._origin = origin;\n            // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n            // tick after the interaction event fired. To ensure the focus origin is always correct,\n            // the focus origin will be determined at the beginning of the next tick.\n            _this._originTimeoutId = setTimeout(function () { return _this._origin = null; }, 1);\n        });\n    };\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param event The focus event to check.\n     * @returns Whether the event was caused by a touch.\n     */\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @private\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    FocusMonitor.prototype._wasCausedByTouch = /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @private\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    function (event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        /** @type {?} */\n        var focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    };\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    /**\n     * Handles focus events on a registered element.\n     * @private\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusMonitor.prototype._onFocus = /**\n     * Handles focus events on a registered element.\n     * @private\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    function (event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        /** @type {?} */\n        var elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n            return;\n        }\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        /** @type {?} */\n        var origin = this._origin;\n        if (!origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                origin = 'touch';\n            }\n            else {\n                origin = 'program';\n            }\n        }\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    };\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusMonitor.prototype._onBlur = /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    function (event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        /** @type {?} */\n        var elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    };\n    /**\n     * @private\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    FocusMonitor.prototype._emitOrigin = /**\n     * @private\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    function (subject, origin) {\n        this._ngZone.run(function () { return subject.next(origin); });\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    FocusMonitor.prototype._incrementMonitoredElementCount = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount == 1 && this._platform.isBrowser) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(function () {\n                document.addEventListener('keydown', _this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', _this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', _this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', _this._windowFocusListener);\n            });\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    FocusMonitor.prototype._decrementMonitoredElementCount = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    };\n    FocusMonitor.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    FocusMonitor.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: Platform }\n    ]; };\n    /** @nocollapse */ FocusMonitor.ngInjectableDef = defineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(inject(NgZone), inject(Platform)); }, token: FocusMonitor, providedIn: \"root\" });\n    return FocusMonitor;\n}());\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nvar CdkMonitorFocus = /** @class */ (function () {\n    function CdkMonitorFocus(_elementRef, _focusMonitor) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(function (origin) { return _this.cdkFocusChange.emit(origin); });\n    }\n    /**\n     * @return {?}\n     */\n    CdkMonitorFocus.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._monitorSubscription.unsubscribe();\n    };\n    CdkMonitorFocus.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkMonitorFocus.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: FocusMonitor }\n    ]; };\n    CdkMonitorFocus.propDecorators = {\n        cdkFocusChange: [{ type: Output }]\n    };\n    return CdkMonitorFocus;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction FOCUS_MONITOR_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new FocusMonitor(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nvar FOCUS_MONITOR_PROVIDER = {\n    // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\n    provide: FocusMonitor,\n    deps: [[new Optional(), new SkipSelf(), FocusMonitor], NgZone, Platform],\n    useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar A11yModule = /** @class */ (function () {\n    function A11yModule() {\n    }\n    A11yModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule, PlatformModule, ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                },] },\n    ];\n    return A11yModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ARIA_DESCRIBER_PROVIDER_FACTORY, MESSAGES_CONTAINER_ID, CDK_DESCRIBEDBY_ID_PREFIX, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, AriaDescriber, ARIA_DESCRIBER_PROVIDER, ActiveDescendantKeyManager, FocusKeyManager, ListKeyManager, FocusTrap, FocusTrapFactory, CdkTrapFocus, InteractivityChecker, LIVE_ANNOUNCER_PROVIDER_FACTORY, LiveAnnouncer, CdkAriaLive, LIVE_ANNOUNCER_PROVIDER, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, LIVE_ANNOUNCER_ELEMENT_TOKEN, FOCUS_MONITOR_PROVIDER_FACTORY, TOUCH_BUFFER_MS, FocusMonitor, CdkMonitorFocus, FOCUS_MONITOR_PROVIDER, isFakeMousedownFromScreenReader, A11yModule };\n//# sourceMappingURL=a11y.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, defineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nvar DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nvar Directionality = /** @class */ (function () {\n    function Directionality(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            var bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            var htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            var value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Directionality.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.change.complete();\n    };\n    Directionality.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    Directionality.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ Directionality.ngInjectableDef = defineInjectable({ factory: function Directionality_Factory() { return new Directionality(inject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n    return Directionality;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nvar Dir = /** @class */ (function () {\n    function Dir() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    Object.defineProperty(Dir.prototype, \"dir\", {\n        /** @docs-private */\n        get: /**\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this._dir; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var old = this._dir;\n            this._rawDir = value;\n            this._dir = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n            if (old !== this._dir && this._isInitialized) {\n                this.change.emit(this._dir);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dir.prototype, \"value\", {\n        /** Current layout direction of the element. */\n        get: /**\n         * Current layout direction of the element.\n         * @return {?}\n         */\n        function () { return this.dir; },\n        enumerable: true,\n        configurable: true\n    });\n    /** Initialize once default value has been set. */\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    Dir.prototype.ngAfterContentInit = /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    function () {\n        this._isInitialized = true;\n    };\n    /**\n     * @return {?}\n     */\n    Dir.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.change.complete();\n    };\n    Dir.decorators = [\n        { type: Directive, args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                },] },\n    ];\n    Dir.propDecorators = {\n        change: [{ type: Output, args: ['dirChange',] }],\n        dir: [{ type: Input }]\n    };\n    return Dir;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar BidiModule = /** @class */ (function () {\n    function BidiModule() {\n    }\n    BidiModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                },] },\n    ];\n    return BidiModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };\n//# sourceMappingURL=bidi.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value) {\n    return value != null && \"\" + value !== 'false';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue) {\n    if (fallbackValue === void 0) { fallbackValue = 0; }\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat((/** @type {?} */ (value)))) && !isNaN(Number(value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a value to a CSS pixel value.\n * @param {?} value\n * @return {?}\n */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : value + \"px\";\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n * @template T\n * @param {?} elementOrRef\n * @return {?}\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray, coerceCssPixelValue, coerceElement };\n//# sourceMappingURL=coercion.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nvar MAC_ENTER = 3;\n/** @type {?} */\nvar BACKSPACE = 8;\n/** @type {?} */\nvar TAB = 9;\n/** @type {?} */\nvar NUM_CENTER = 12;\n/** @type {?} */\nvar ENTER = 13;\n/** @type {?} */\nvar SHIFT = 16;\n/** @type {?} */\nvar CONTROL = 17;\n/** @type {?} */\nvar ALT = 18;\n/** @type {?} */\nvar PAUSE = 19;\n/** @type {?} */\nvar CAPS_LOCK = 20;\n/** @type {?} */\nvar ESCAPE = 27;\n/** @type {?} */\nvar SPACE = 32;\n/** @type {?} */\nvar PAGE_UP = 33;\n/** @type {?} */\nvar PAGE_DOWN = 34;\n/** @type {?} */\nvar END = 35;\n/** @type {?} */\nvar HOME = 36;\n/** @type {?} */\nvar LEFT_ARROW = 37;\n/** @type {?} */\nvar UP_ARROW = 38;\n/** @type {?} */\nvar RIGHT_ARROW = 39;\n/** @type {?} */\nvar DOWN_ARROW = 40;\n/** @type {?} */\nvar PLUS_SIGN = 43;\n/** @type {?} */\nvar PRINT_SCREEN = 44;\n/** @type {?} */\nvar INSERT = 45;\n/** @type {?} */\nvar DELETE = 46;\n/** @type {?} */\nvar ZERO = 48;\n/** @type {?} */\nvar ONE = 49;\n/** @type {?} */\nvar TWO = 50;\n/** @type {?} */\nvar THREE = 51;\n/** @type {?} */\nvar FOUR = 52;\n/** @type {?} */\nvar FIVE = 53;\n/** @type {?} */\nvar SIX = 54;\n/** @type {?} */\nvar SEVEN = 55;\n/** @type {?} */\nvar EIGHT = 56;\n/** @type {?} */\nvar NINE = 57;\n/** @type {?} */\nvar FF_SEMICOLON = 59;\n// Firefox (Gecko) fires this for semicolon instead of 186\n/** @type {?} */\nvar FF_EQUALS = 61;\n// Firefox (Gecko) fires this for equals instead of 187\n/** @type {?} */\nvar QUESTION_MARK = 63;\n/** @type {?} */\nvar AT_SIGN = 64;\n/** @type {?} */\nvar A = 65;\n/** @type {?} */\nvar B = 66;\n/** @type {?} */\nvar C = 67;\n/** @type {?} */\nvar D = 68;\n/** @type {?} */\nvar E = 69;\n/** @type {?} */\nvar F = 70;\n/** @type {?} */\nvar G = 71;\n/** @type {?} */\nvar H = 72;\n/** @type {?} */\nvar I = 73;\n/** @type {?} */\nvar J = 74;\n/** @type {?} */\nvar K = 75;\n/** @type {?} */\nvar L = 76;\n/** @type {?} */\nvar M = 77;\n/** @type {?} */\nvar N = 78;\n/** @type {?} */\nvar O = 79;\n/** @type {?} */\nvar P = 80;\n/** @type {?} */\nvar Q = 81;\n/** @type {?} */\nvar R = 82;\n/** @type {?} */\nvar S = 83;\n/** @type {?} */\nvar T = 84;\n/** @type {?} */\nvar U = 85;\n/** @type {?} */\nvar V = 86;\n/** @type {?} */\nvar W = 87;\n/** @type {?} */\nvar X = 88;\n/** @type {?} */\nvar Y = 89;\n/** @type {?} */\nvar Z = 90;\n/** @type {?} */\nvar META = 91;\n// WIN_KEY_LEFT\n/** @type {?} */\nvar MAC_WK_CMD_LEFT = 91;\n/** @type {?} */\nvar MAC_WK_CMD_RIGHT = 93;\n/** @type {?} */\nvar CONTEXT_MENU = 93;\n/** @type {?} */\nvar NUMPAD_ZERO = 96;\n/** @type {?} */\nvar NUMPAD_ONE = 97;\n/** @type {?} */\nvar NUMPAD_TWO = 98;\n/** @type {?} */\nvar NUMPAD_THREE = 99;\n/** @type {?} */\nvar NUMPAD_FOUR = 100;\n/** @type {?} */\nvar NUMPAD_FIVE = 101;\n/** @type {?} */\nvar NUMPAD_SIX = 102;\n/** @type {?} */\nvar NUMPAD_SEVEN = 103;\n/** @type {?} */\nvar NUMPAD_EIGHT = 104;\n/** @type {?} */\nvar NUMPAD_NINE = 105;\n/** @type {?} */\nvar NUMPAD_MULTIPLY = 106;\n/** @type {?} */\nvar NUMPAD_PLUS = 107;\n/** @type {?} */\nvar NUMPAD_MINUS = 109;\n/** @type {?} */\nvar NUMPAD_PERIOD = 110;\n/** @type {?} */\nvar NUMPAD_DIVIDE = 111;\n/** @type {?} */\nvar F1 = 112;\n/** @type {?} */\nvar F2 = 113;\n/** @type {?} */\nvar F3 = 114;\n/** @type {?} */\nvar F4 = 115;\n/** @type {?} */\nvar F5 = 116;\n/** @type {?} */\nvar F6 = 117;\n/** @type {?} */\nvar F7 = 118;\n/** @type {?} */\nvar F8 = 119;\n/** @type {?} */\nvar F9 = 120;\n/** @type {?} */\nvar F10 = 121;\n/** @type {?} */\nvar F11 = 122;\n/** @type {?} */\nvar F12 = 123;\n/** @type {?} */\nvar NUM_LOCK = 144;\n/** @type {?} */\nvar SCROLL_LOCK = 145;\n/** @type {?} */\nvar FIRST_MEDIA = 166;\n/** @type {?} */\nvar FF_MINUS = 173;\n/** @type {?} */\nvar MUTE = 173;\n// Firefox (Gecko) fires 181 for MUTE\n/** @type {?} */\nvar VOLUME_DOWN = 174;\n// Firefox (Gecko) fires 182 for VOLUME_DOWN\n/** @type {?} */\nvar VOLUME_UP = 175;\n// Firefox (Gecko) fires 183 for VOLUME_UP\n/** @type {?} */\nvar FF_MUTE = 181;\n/** @type {?} */\nvar FF_VOLUME_DOWN = 182;\n/** @type {?} */\nvar LAST_MEDIA = 183;\n/** @type {?} */\nvar FF_VOLUME_UP = 183;\n/** @type {?} */\nvar SEMICOLON = 186;\n// Firefox (Gecko) fires 59 for SEMICOLON\n/** @type {?} */\nvar EQUALS = 187;\n// Firefox (Gecko) fires 61 for EQUALS\n/** @type {?} */\nvar COMMA = 188;\n/** @type {?} */\nvar DASH = 189;\n// Firefox (Gecko) fires 173 for DASH/MINUS\n/** @type {?} */\nvar SLASH = 191;\n/** @type {?} */\nvar APOSTROPHE = 192;\n/** @type {?} */\nvar TILDE = 192;\n/** @type {?} */\nvar OPEN_SQUARE_BRACKET = 219;\n/** @type {?} */\nvar BACKSLASH = 220;\n/** @type {?} */\nvar CLOSE_SQUARE_BRACKET = 221;\n/** @type {?} */\nvar SINGLE_QUOTE = 222;\n/** @type {?} */\nvar MAC_META = 224;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Checks whether a modifier key is pressed.\n * @param {?} event Event to be checked.\n * @param {...?} modifiers\n * @return {?}\n */\nfunction hasModifierKey(event) {\n    var modifiers = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        modifiers[_i - 1] = arguments[_i];\n    }\n    if (modifiers.length) {\n        return modifiers.some(function (modifier) { return event[modifier]; });\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MAC_ENTER, BACKSPACE, TAB, NUM_CENTER, ENTER, SHIFT, CONTROL, ALT, PAUSE, CAPS_LOCK, ESCAPE, SPACE, PAGE_UP, PAGE_DOWN, END, HOME, LEFT_ARROW, UP_ARROW, RIGHT_ARROW, DOWN_ARROW, PLUS_SIGN, PRINT_SCREEN, INSERT, DELETE, ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, FF_SEMICOLON, FF_EQUALS, QUESTION_MARK, AT_SIGN, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, CONTEXT_MENU, NUMPAD_ZERO, NUMPAD_ONE, NUMPAD_TWO, NUMPAD_THREE, NUMPAD_FOUR, NUMPAD_FIVE, NUMPAD_SIX, NUMPAD_SEVEN, NUMPAD_EIGHT, NUMPAD_NINE, NUMPAD_MULTIPLY, NUMPAD_PLUS, NUMPAD_MINUS, NUMPAD_PERIOD, NUMPAD_DIVIDE, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, NUM_LOCK, SCROLL_LOCK, FIRST_MEDIA, FF_MINUS, MUTE, VOLUME_DOWN, VOLUME_UP, FF_MUTE, FF_VOLUME_DOWN, LAST_MEDIA, FF_VOLUME_UP, SEMICOLON, EQUALS, COMMA, DASH, SLASH, APOSTROPHE, TILDE, OPEN_SQUARE_BRACKET, BACKSLASH, CLOSE_SQUARE_BRACKET, SINGLE_QUOTE, MAC_META, hasModifierKey };\n//# sourceMappingURL=keycodes.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, NgZone, Output, defineInjectable, inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nvar MutationObserverFactory = /** @class */ (function () {\n    function MutationObserverFactory() {\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    MutationObserverFactory.prototype.create = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    };\n    MutationObserverFactory.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ MutationObserverFactory.ngInjectableDef = defineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n    return MutationObserverFactory;\n}());\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nvar ContentObserver = /** @class */ (function () {\n    function ContentObserver(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ContentObserver.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._observedElements.forEach(function (_, element) { return _this._cleanupObserver(element); });\n    };\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    ContentObserver.prototype.observe = /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    function (elementOrRef) {\n        var _this = this;\n        /** @type {?} */\n        var element = coerceElement(elementOrRef);\n        return Observable.create(function (observer) {\n            /** @type {?} */\n            var stream = _this._observeElement(element);\n            /** @type {?} */\n            var subscription = stream.subscribe(observer);\n            return function () {\n                subscription.unsubscribe();\n                _this._unobserveElement(element);\n            };\n        });\n    };\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._observeElement = /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            var stream_1 = new Subject();\n            /** @type {?} */\n            var observer = this._mutationObserverFactory.create(function (mutations) { return stream_1.next(mutations); });\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer: observer, stream: stream_1, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    };\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._unobserveElement = /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    };\n    /** Clean up the underlying MutationObserver for the specified element. */\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._cleanupObserver = /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            var _a = (/** @type {?} */ (this._observedElements.get(element))), observer = _a.observer, stream = _a.stream;\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    };\n    ContentObserver.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ContentObserver.ctorParameters = function () { return [\n        { type: MutationObserverFactory }\n    ]; };\n    /** @nocollapse */ ContentObserver.ngInjectableDef = defineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(inject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n    return ContentObserver;\n}());\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nvar CdkObserveContent = /** @class */ (function () {\n    function CdkObserveContent(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    Object.defineProperty(CdkObserveContent.prototype, \"disabled\", {\n        /**\n         * Whether observing content is disabled. This option can be used\n         * to disconnect the underlying MutationObserver until it is needed.\n         */\n        get: /**\n         * Whether observing content is disabled. This option can be used\n         * to disconnect the underlying MutationObserver until it is needed.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._disabled ? this._unsubscribe() : this._subscribe();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkObserveContent.prototype, \"debounce\", {\n        /** Debounce interval for emitting the changes. */\n        get: /**\n         * Debounce interval for emitting the changes.\n         * @return {?}\n         */\n        function () { return this._debounce; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._debounce = coerceNumberProperty(value);\n            this._subscribe();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._unsubscribe();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    CdkObserveContent.prototype._subscribe = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._unsubscribe();\n        /** @type {?} */\n        var stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(function () {\n            _this._currentSubscription =\n                (_this.debounce ? stream.pipe(debounceTime(_this.debounce)) : stream).subscribe(_this.event);\n        });\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    CdkObserveContent.prototype._unsubscribe = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    };\n    CdkObserveContent.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkObserveContent.ctorParameters = function () { return [\n        { type: ContentObserver },\n        { type: ElementRef },\n        { type: NgZone }\n    ]; };\n    CdkObserveContent.propDecorators = {\n        event: [{ type: Output, args: ['cdkObserveContent',] }],\n        disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n        debounce: [{ type: Input }]\n    };\n    return CdkObserveContent;\n}());\nvar ObserversModule = /** @class */ (function () {\n    function ObserversModule() {\n    }\n    ObserversModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory]\n                },] },\n    ];\n    return ObserversModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule };\n//# sourceMappingURL=observers.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, defineInjectable, inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nvar hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nvar Platform = /** @class */ (function () {\n    /**\n     * @breaking-change 8.0.0 remove optional decorator\n     */\n    function Platform(_platformId) {\n        this._platformId = _platformId;\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         * We want to use the Angular platform check because if the Document is shimmed\n         * without the navigator, the following checks will fail. This is preferred because\n         * sometimes the Document may be shimmed without the user's knowledge or intention\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        /**\n         * Whether the current browser is Firefox.\n         */\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    Platform.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    Platform.ctorParameters = function () { return [\n        { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n    ]; };\n    /** @nocollapse */ Platform.ngInjectableDef = defineInjectable({ factory: function Platform_Factory() { return new Platform(inject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n    return Platform;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PlatformModule = /** @class */ (function () {\n    function PlatformModule() {\n    }\n    PlatformModule.decorators = [\n        { type: NgModule, args: [{},] },\n    ];\n    return PlatformModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nvar supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nvar candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    var featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(function (value) {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nvar supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: function () { return supportsPassiveEvents = true; }\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nvar RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\nRtlScrollAxisType[RtlScrollAxisType.NORMAL] = 'NORMAL';\nRtlScrollAxisType[RtlScrollAxisType.NEGATED] = 'NEGATED';\nRtlScrollAxisType[RtlScrollAxisType.INVERTED] = 'INVERTED';\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nvar rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (!rtlScrollAxisType) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        var scrollContainer = document.createElement('div');\n        /** @type {?} */\n        var containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        var content = document.createElement('div');\n        /** @type {?} */\n        var contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Platform, PlatformModule, getSupportedInputTypes, supportsPassiveEventListeners, normalizePassiveListenerOptions, supportsScrollBehavior, getRtlScrollAxisType, RtlScrollAxisType };\n//# sourceMappingURL=platform.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, TemplateRef, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, InjectionToken, NgModule } from '@angular/core';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { END, ENTER, HOME, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport '@angular/forms';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar CdkStepLabel = /** @class */ (function () {\n    function CdkStepLabel(/** @docs-private */ template) {\n        this.template = template;\n    }\n    CdkStepLabel.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkStepLabel]',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkStepLabel.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return CdkStepLabel;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar CdkStepHeader = /** @class */ (function () {\n    function CdkStepHeader(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    CdkStepHeader.prototype.focus = /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.focus();\n    };\n    CdkStepHeader.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    CdkStepHeader.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    return CdkStepHeader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each stepper component.\n * @type {?}\n */\nvar nextId = 0;\n/**\n * Change event emitted on selection changes.\n */\nvar  /**\n * Change event emitted on selection changes.\n */\nStepperSelectionEvent = /** @class */ (function () {\n    function StepperSelectionEvent() {\n    }\n    return StepperSelectionEvent;\n}());\n/**\n * Enum to represent the different states of the steps.\n * @type {?}\n */\nvar STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @type {?}\n */\nvar STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * \\@breaking-change 8.0.0.\n * @type {?}\n */\nvar MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\nvar CdkStep = /** @class */ (function () {\n    /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n    function CdkStep(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /**\n         * Whether user has seen the expanded step content or not.\n         */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._customCompleted = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    Object.defineProperty(CdkStep.prototype, \"editable\", {\n        /** Whether the user can return to this step once it has been marked as complted. */\n        get: /**\n         * Whether the user can return to this step once it has been marked as complted.\n         * @return {?}\n         */\n        function () { return this._editable; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._editable = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkStep.prototype, \"optional\", {\n        /** Whether the completion of step is optional. */\n        get: /**\n         * Whether the completion of step is optional.\n         * @return {?}\n         */\n        function () { return this._optional; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._optional = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkStep.prototype, \"completed\", {\n        /** Whether step is marked as completed. */\n        get: /**\n         * Whether step is marked as completed.\n         * @return {?}\n         */\n        function () {\n            return this._customCompleted == null ? this._getDefaultCompleted() : this._customCompleted;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._customCompleted = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @return {?}\n     */\n    CdkStep.prototype._getDefaultCompleted = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    };\n    Object.defineProperty(CdkStep.prototype, \"hasError\", {\n        /** Whether step has an error. */\n        get: /**\n         * Whether step has an error.\n         * @return {?}\n         */\n        function () {\n            return this._customError == null ? this._getDefaultError() : this._customError;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._customError = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @return {?}\n     */\n    CdkStep.prototype._getDefaultError = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    };\n    /** Selects this step component. */\n    /**\n     * Selects this step component.\n     * @return {?}\n     */\n    CdkStep.prototype.select = /**\n     * Selects this step component.\n     * @return {?}\n     */\n    function () {\n        this._stepper.selected = this;\n    };\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    /**\n     * Resets the step to its initial state. Note that this includes resetting form data.\n     * @return {?}\n     */\n    CdkStep.prototype.reset = /**\n     * Resets the step to its initial state. Note that this includes resetting form data.\n     * @return {?}\n     */\n    function () {\n        this.interacted = false;\n        if (this._customCompleted != null) {\n            this._customCompleted = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkStep.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n    function () {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    };\n    CdkStep.decorators = [\n        { type: Component, args: [{selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    CdkStep.ctorParameters = function () { return [\n        { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef(function () { return CdkStepper; }),] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n    ]; };\n    CdkStep.propDecorators = {\n        stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n        content: [{ type: ViewChild, args: [TemplateRef,] }],\n        stepControl: [{ type: Input }],\n        label: [{ type: Input }],\n        errorMessage: [{ type: Input }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        state: [{ type: Input }],\n        editable: [{ type: Input }],\n        optional: [{ type: Input }],\n        completed: [{ type: Input }],\n        hasError: [{ type: Input }]\n    };\n    return CdkStep;\n}());\nvar CdkStepper = /** @class */ (function () {\n    function CdkStepper(_dir, _changeDetectorRef, _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the selected step has changed.\n         */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    Object.defineProperty(CdkStepper.prototype, \"linear\", {\n        /** Whether the validity of previous steps should be checked or not. */\n        get: /**\n         * Whether the validity of previous steps should be checked or not.\n         * @return {?}\n         */\n        function () { return this._linear; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._linear = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkStepper.prototype, \"selectedIndex\", {\n        /** The index of the selected step. */\n        get: /**\n         * The index of the selected step.\n         * @return {?}\n         */\n        function () { return this._selectedIndex; },\n        set: /**\n         * @param {?} index\n         * @return {?}\n         */\n        function (index) {\n            if (this._steps) {\n                // Ensure that the index can't be out of bounds.\n                if (index < 0 || index > this._steps.length - 1) {\n                    throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n                }\n                if (this._selectedIndex != index &&\n                    !this._anyControlsInvalidOrPending(index) &&\n                    (index >= this._selectedIndex || this._steps.toArray()[index].editable)) {\n                    this._updateSelectedItemIndex(index);\n                }\n            }\n            else {\n                this._selectedIndex = index;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkStepper.prototype, \"selected\", {\n        /** The step that is selected. */\n        get: /**\n         * The step that is selected.\n         * @return {?}\n         */\n        function () {\n            // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n            return this._steps ? this._steps.toArray()[this.selectedIndex] : (/** @type {?} */ (undefined));\n        },\n        set: /**\n         * @param {?} step\n         * @return {?}\n         */\n        function (step) {\n            this.selectedIndex = this._steps ? this._steps.toArray().indexOf(step) : -1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkStepper.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view chidren. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? (/** @type {?} */ (this._dir.change)) : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(function (direction) { return _this._keyManager.withHorizontalOrientation(direction); });\n        this._keyManager.updateActiveItemIndex(this._selectedIndex);\n        this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(function () {\n            if (!_this.selected) {\n                _this._selectedIndex = Math.max(_this._selectedIndex - 1, 0);\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CdkStepper.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /** Selects and focuses the next step in list. */\n    /**\n     * Selects and focuses the next step in list.\n     * @return {?}\n     */\n    CdkStepper.prototype.next = /**\n     * Selects and focuses the next step in list.\n     * @return {?}\n     */\n    function () {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this._steps.length - 1);\n    };\n    /** Selects and focuses the previous step in list. */\n    /**\n     * Selects and focuses the previous step in list.\n     * @return {?}\n     */\n    CdkStepper.prototype.previous = /**\n     * Selects and focuses the previous step in list.\n     * @return {?}\n     */\n    function () {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    };\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    /**\n     * Resets the stepper to its initial state. Note that this includes clearing form data.\n     * @return {?}\n     */\n    CdkStepper.prototype.reset = /**\n     * Resets the stepper to its initial state. Note that this includes clearing form data.\n     * @return {?}\n     */\n    function () {\n        this._updateSelectedItemIndex(0);\n        this._steps.forEach(function (step) { return step.reset(); });\n        this._stateChanged();\n    };\n    /** Returns a unique id for each step label element. */\n    /**\n     * Returns a unique id for each step label element.\n     * @param {?} i\n     * @return {?}\n     */\n    CdkStepper.prototype._getStepLabelId = /**\n     * Returns a unique id for each step label element.\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"cdk-step-label-\" + this._groupId + \"-\" + i;\n    };\n    /** Returns unique id for each step content element. */\n    /**\n     * Returns unique id for each step content element.\n     * @param {?} i\n     * @return {?}\n     */\n    CdkStepper.prototype._getStepContentId = /**\n     * Returns unique id for each step content element.\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"cdk-step-content-\" + this._groupId + \"-\" + i;\n    };\n    /** Marks the component to be change detected. */\n    /**\n     * Marks the component to be change detected.\n     * @return {?}\n     */\n    CdkStepper.prototype._stateChanged = /**\n     * Marks the component to be change detected.\n     * @return {?}\n     */\n    function () {\n        this._changeDetectorRef.markForCheck();\n    };\n    /** Returns position state of the step with the given index. */\n    /**\n     * Returns position state of the step with the given index.\n     * @param {?} index\n     * @return {?}\n     */\n    CdkStepper.prototype._getAnimationDirection = /**\n     * Returns position state of the step with the given index.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    };\n    /** Returns the type of icon to be displayed. */\n    /**\n     * Returns the type of icon to be displayed.\n     * @param {?} index\n     * @param {?=} state\n     * @return {?}\n     */\n    CdkStepper.prototype._getIndicatorType = /**\n     * Returns the type of icon to be displayed.\n     * @param {?} index\n     * @param {?=} state\n     * @return {?}\n     */\n    function (index, state) {\n        if (state === void 0) { state = STEP_STATE.NUMBER; }\n        /** @type {?} */\n        var step = this._steps.toArray()[index];\n        /** @type {?} */\n        var isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType\n            ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n            : this._getGuidelineLogic(step, isCurrentStep, state);\n    };\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @return {?}\n     */\n    CdkStepper.prototype._getDefaultIndicatorLogic = /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @return {?}\n     */\n    function (step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    };\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @param {?=} state\n     * @return {?}\n     */\n    CdkStepper.prototype._getGuidelineLogic = /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @param {?=} state\n     * @return {?}\n     */\n    function (step, isCurrentStep, state) {\n        if (state === void 0) { state = STEP_STATE.NUMBER; }\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    };\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    CdkStepper.prototype._isCurrentStep = /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        return this._selectedIndex === index;\n    };\n    /** Returns the index of the currently-focused step header. */\n    /**\n     * Returns the index of the currently-focused step header.\n     * @return {?}\n     */\n    CdkStepper.prototype._getFocusIndex = /**\n     * Returns the index of the currently-focused step header.\n     * @return {?}\n     */\n    function () {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    };\n    /**\n     * @private\n     * @param {?} newIndex\n     * @return {?}\n     */\n    CdkStepper.prototype._updateSelectedItemIndex = /**\n     * @private\n     * @param {?} newIndex\n     * @return {?}\n     */\n    function (newIndex) {\n        /** @type {?} */\n        var stepsArray = this._steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItemIndex(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    CdkStepper.prototype._onKeydown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var hasModifier = hasModifierKey(event);\n        /** @type {?} */\n        var keyCode = event.keyCode;\n        /** @type {?} */\n        var manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    };\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    CdkStepper.prototype._anyControlsInvalidOrPending = /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var steps = this._steps.toArray();\n        steps[this._selectedIndex].interacted = true;\n        if (this._linear && index >= 0) {\n            return steps.slice(0, index).some(function (step) {\n                /** @type {?} */\n                var control = step.stepControl;\n                /** @type {?} */\n                var isIncomplete = control ?\n                    (control.invalid || control.pending || !step.interacted) :\n                    !step.completed;\n                return isIncomplete && !step.optional;\n            });\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    CdkStepper.prototype._layoutDirection = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Checks whether the stepper contains the focused element. */\n    /**\n     * Checks whether the stepper contains the focused element.\n     * @private\n     * @return {?}\n     */\n    CdkStepper.prototype._containsFocus = /**\n     * Checks whether the stepper contains the focused element.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        /** @type {?} */\n        var stepperElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        var focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    };\n    CdkStepper.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkStepper.ctorParameters = function () { return [\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef },\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    CdkStepper.propDecorators = {\n        _steps: [{ type: ContentChildren, args: [CdkStep,] }],\n        _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader,] }],\n        linear: [{ type: Input }],\n        selectedIndex: [{ type: Input }],\n        selected: [{ type: Input }],\n        selectionChange: [{ type: Output }]\n    };\n    return CdkStepper;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nvar CdkStepperNext = /** @class */ (function () {\n    function CdkStepperNext(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the next button. Defaults to \"submit\" if not specified.\n         */\n        this.type = 'submit';\n    }\n    CdkStepperNext.decorators = [\n        { type: Directive, args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '(click)': '_stepper.next()',\n                        '[type]': 'type',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    CdkStepperNext.ctorParameters = function () { return [\n        { type: CdkStepper }\n    ]; };\n    CdkStepperNext.propDecorators = {\n        type: [{ type: Input }]\n    };\n    return CdkStepperNext;\n}());\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nvar CdkStepperPrevious = /** @class */ (function () {\n    function CdkStepperPrevious(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the previous button. Defaults to \"button\" if not specified.\n         */\n        this.type = 'button';\n    }\n    CdkStepperPrevious.decorators = [\n        { type: Directive, args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '(click)': '_stepper.previous()',\n                        '[type]': 'type',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    CdkStepperPrevious.ctorParameters = function () { return [\n        { type: CdkStepper }\n    ]; };\n    CdkStepperPrevious.propDecorators = {\n        type: [{ type: Input }]\n    };\n    return CdkStepperPrevious;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar CdkStepperModule = /** @class */ (function () {\n    function CdkStepperModule() {\n    }\n    CdkStepperModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [BidiModule, CommonModule],\n                    exports: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                    declarations: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ]\n                },] },\n    ];\n    return CdkStepperModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { StepperSelectionEvent, STEP_STATE, STEPPER_GLOBAL_OPTIONS, MAT_STEPPER_GLOBAL_OPTIONS, CdkStep, CdkStepper, CdkStepLabel, CdkStepperNext, CdkStepperPrevious, CdkStepperModule, CdkStepHeader };\n//# sourceMappingURL=stepper.es5.js.map\n","import { __extends } from 'tslib';\nimport { InjectionToken, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * A storage service implementation that is used as a proxy for another storage service. This is used to create storage services with a\r\n * different default transcoder.\r\n * @template T\r\n */\r\nvar  /**\r\n * A storage service implementation that is used as a proxy for another storage service. This is used to create storage services with a\r\n * different default transcoder.\r\n * @template T\r\n */\r\nProxyStorageService = /** @class */ (function () {\r\n    /**\r\n     * Creates a new `ProxyStorageService` instance that uses the specified transcoder by default for read and write operations. Actual\r\n     * read and writes are delegated to given storage service.\r\n     *\r\n     * @param defaultTranscoder Transcoder which is to be used by default for storage read and write operations.\r\n     * @param subject           Storage service which should handle to actual storage of data.\r\n     */\r\n    function ProxyStorageService(defaultTranscoder, subject) {\r\n        this.defaultTranscoder = defaultTranscoder;\r\n        this.subject = subject;\r\n    }\r\n    /**\r\n     * Checks whether an entry with the specified key exists in the storage.\r\n     *\r\n     * @param   key Identifier of the entry for which its presence in the storage is to be checked.\r\n     * @returns     `true` if an entry with the specified key exists in the storage, `false` if not.\r\n     */\r\n    /**\r\n     * Checks whether an entry with the specified key exists in the storage.\r\n     *\r\n     * @param {?} key Identifier of the entry for which its presence in the storage is to be checked.\r\n     * @return {?} `true` if an entry with the specified key exists in the storage, `false` if not.\r\n     */\r\n    ProxyStorageService.prototype.has = /**\r\n     * Checks whether an entry with the specified key exists in the storage.\r\n     *\r\n     * @param {?} key Identifier of the entry for which its presence in the storage is to be checked.\r\n     * @return {?} `true` if an entry with the specified key exists in the storage, `false` if not.\r\n     */\r\n    function (key) {\r\n        return this.subject.has(key);\r\n    };\r\n    /*\r\n     * Retrieves the value stored for the entry that is associated with the specified key. The given decoder is used to convert the stored\r\n     * value to the desired type. If no entry for the specified key exists or if the decoder is unable to decode the stored value, then\r\n     * `undefined` will be returned.\r\n     *\r\n     * @param   key     Identifier of the entry whose value is to be retrieved.\r\n     * @param   decoder Decoder to use for converting the stored value to the desired return type.\r\n     * @returns         Value of the entry that is identified by the specified key. In case the entry does not exist or if it cannot be\r\n     *                  loaded (due to a decoding issue), then `undefined` will be returned by this function.\r\n     */\r\n    /*\r\n         * Retrieves the value stored for the entry that is associated with the specified key. The given decoder is used to convert the stored\r\n         * value to the desired type. If no entry for the specified key exists or if the decoder is unable to decode the stored value, then\r\n         * `undefined` will be returned.\r\n         *\r\n         * @param   key     Identifier of the entry whose value is to be retrieved.\r\n         * @param   decoder Decoder to use for converting the stored value to the desired return type.\r\n         * @returns         Value of the entry that is identified by the specified key. In case the entry does not exist or if it cannot be\r\n         *                  loaded (due to a decoding issue), then `undefined` will be returned by this function.\r\n         */\r\n    /**\r\n     * @param {?} key\r\n     * @param {?=} decoder\r\n     * @return {?}\r\n     */\r\n    ProxyStorageService.prototype.get = /*\r\n         * Retrieves the value stored for the entry that is associated with the specified key. The given decoder is used to convert the stored\r\n         * value to the desired type. If no entry for the specified key exists or if the decoder is unable to decode the stored value, then\r\n         * `undefined` will be returned.\r\n         *\r\n         * @param   key     Identifier of the entry whose value is to be retrieved.\r\n         * @param   decoder Decoder to use for converting the stored value to the desired return type.\r\n         * @returns         Value of the entry that is identified by the specified key. In case the entry does not exist or if it cannot be\r\n         *                  loaded (due to a decoding issue), then `undefined` will be returned by this function.\r\n         */\r\n    /**\r\n     * @param {?} key\r\n     * @param {?=} decoder\r\n     * @return {?}\r\n     */\r\n    function (key, decoder) {\r\n        return this.subject.get(key, decoder || this.defaultTranscoder);\r\n    };\r\n    /**\r\n     * Creates or updates the entry identified by the specified key with the given value. The specified encoder is used to convert the given\r\n     * value into a format that can be stored by the storage service's underlying storage.\r\n     *\r\n     * Storing a value into the storage service will ensure that an equivalent of the value can be read back, i.e. the data and structure of\r\n     * the value will be the same. It, however, does not necessarily return the same reference.\r\n     *\r\n     * @param key     Identifier of the entry which is to be created or updated.\r\n     * @param value   Value which is to be stored.\r\n     * @param encoder Encoder used to convert the given value into a format that can be used for storage.\r\n     */\r\n    /**\r\n     * Creates or updates the entry identified by the specified key with the given value. The specified encoder is used to convert the given\r\n     * value into a format that can be stored by the storage service's underlying storage.\r\n     *\r\n     * Storing a value into the storage service will ensure that an equivalent of the value can be read back, i.e. the data and structure of\r\n     * the value will be the same. It, however, does not necessarily return the same reference.\r\n     *\r\n     * @param {?} key     Identifier of the entry which is to be created or updated.\r\n     * @param {?} value   Value which is to be stored.\r\n     * @param {?=} encoder Encoder used to convert the given value into a format that can be used for storage.\r\n     * @return {?}\r\n     */\r\n    ProxyStorageService.prototype.set = /**\r\n     * Creates or updates the entry identified by the specified key with the given value. The specified encoder is used to convert the given\r\n     * value into a format that can be stored by the storage service's underlying storage.\r\n     *\r\n     * Storing a value into the storage service will ensure that an equivalent of the value can be read back, i.e. the data and structure of\r\n     * the value will be the same. It, however, does not necessarily return the same reference.\r\n     *\r\n     * @param {?} key     Identifier of the entry which is to be created or updated.\r\n     * @param {?} value   Value which is to be stored.\r\n     * @param {?=} encoder Encoder used to convert the given value into a format that can be used for storage.\r\n     * @return {?}\r\n     */\r\n    function (key, value, encoder) {\r\n        this.subject.set(key, value, encoder || this.defaultTranscoder);\r\n    };\r\n    /**\r\n     * Removes the entry that is identified by the specified key. Attempting to remove an entry for an unknown key will have no effect.\r\n     * Attempting to retrieve an entry via the `get` method after it has been removed will result in `undefined`.\r\n     *\r\n     * @param key Identifier of the entry which is to be removed.\r\n     */\r\n    /**\r\n     * Removes the entry that is identified by the specified key. Attempting to remove an entry for an unknown key will have no effect.\r\n     * Attempting to retrieve an entry via the `get` method after it has been removed will result in `undefined`.\r\n     *\r\n     * @param {?} key Identifier of the entry which is to be removed.\r\n     * @return {?}\r\n     */\r\n    ProxyStorageService.prototype.remove = /**\r\n     * Removes the entry that is identified by the specified key. Attempting to remove an entry for an unknown key will have no effect.\r\n     * Attempting to retrieve an entry via the `get` method after it has been removed will result in `undefined`.\r\n     *\r\n     * @param {?} key Identifier of the entry which is to be removed.\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        this.subject.remove(key);\r\n    };\r\n    /**\r\n     * Clears the storage by removing all entries. Subsequent `get(x)` calls for a key *x* will return `undefined`, until a new value is set\r\n     * for key *x*.\r\n     */\r\n    /**\r\n     * Clears the storage by removing all entries. Subsequent `get(x)` calls for a key *x* will return `undefined`, until a new value is set\r\n     * for key *x*.\r\n     * @return {?}\r\n     */\r\n    ProxyStorageService.prototype.clear = /**\r\n     * Clears the storage by removing all entries. Subsequent `get(x)` calls for a key *x* will return `undefined`, until a new value is set\r\n     * for key *x*.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.subject.clear();\r\n    };\r\n    /**\r\n     * Creates a new storage service that uses the specified transcoder by default for read and write operations. The new storage service\r\n     * uses the storage service on which this function is invoked as underlying storage. Both storage services will thus be able to access\r\n     * the same data.\r\n     *\r\n     * The default transcoder will not be changed for the storage service on which this function is invoked.\r\n     *\r\n     * @param   transcoder Transcoder that should be used by default for read and write operations by the new storage service.\r\n     * @returns            A new storage service that uses the specified transcoder by default.\r\n     */\r\n    /**\r\n     * Creates a new storage service that uses the specified transcoder by default for read and write operations. The new storage service\r\n     * uses the storage service on which this function is invoked as underlying storage. Both storage services will thus be able to access\r\n     * the same data.\r\n     *\r\n     * The default transcoder will not be changed for the storage service on which this function is invoked.\r\n     *\r\n     * @template X\r\n     * @param {?} transcoder Transcoder that should be used by default for read and write operations by the new storage service.\r\n     * @return {?} A new storage service that uses the specified transcoder by default.\r\n     */\r\n    ProxyStorageService.prototype.withDefaultTranscoder = /**\r\n     * Creates a new storage service that uses the specified transcoder by default for read and write operations. The new storage service\r\n     * uses the storage service on which this function is invoked as underlying storage. Both storage services will thus be able to access\r\n     * the same data.\r\n     *\r\n     * The default transcoder will not be changed for the storage service on which this function is invoked.\r\n     *\r\n     * @template X\r\n     * @param {?} transcoder Transcoder that should be used by default for read and write operations by the new storage service.\r\n     * @return {?} A new storage service that uses the specified transcoder by default.\r\n     */\r\n    function (transcoder) {\r\n        return new ProxyStorageService(transcoder, this.subject);\r\n    };\r\n    return ProxyStorageService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Base implementation for storage services.\r\n * @abstract\r\n * @template T\r\n */\r\nvar  /**\r\n * Base implementation for storage services.\r\n * @abstract\r\n * @template T\r\n */\r\nBaseStorageService = /** @class */ (function () {\r\n    /**\r\n     * Creates a new `BaseStorageService` that uses the specified transcoder by default for read and write operations.\r\n     *\r\n     * @param defaultTranscoder Transcoder which is to be used by default for storage read and write operations.\r\n     */\r\n    function BaseStorageService(defaultTranscoder) {\r\n        this.defaultTranscoder = defaultTranscoder;\r\n    }\r\n    /**\r\n     * Retrieves the value stored for the entry that is associated with the specified key. The given decoder is used to convert the stored\r\n     * value to the desired type. If no entry for the specified key exists or if the decoder is unable to decode the stored value, then\r\n     * `undefined` will be returned.\r\n     *\r\n     * @param   key     Identifier of the entry whose value is to be retrieved.\r\n     * @param   decoder Decoder to use for converting the stored value to the desired return type.\r\n     * @returns         Value of the entry that is identified by the specified key. In case the entry does not exist or if it cannot be\r\n     *                  loaded (due to a decoding issue), then `undefined` will be returned by this function.\r\n     */\r\n    /**\r\n     * Retrieves the value stored for the entry that is associated with the specified key. The given decoder is used to convert the stored\r\n     * value to the desired type. If no entry for the specified key exists or if the decoder is unable to decode the stored value, then\r\n     * `undefined` will be returned.\r\n     *\r\n     * @param {?} key     Identifier of the entry whose value is to be retrieved.\r\n     * @param {?=} decoder Decoder to use for converting the stored value to the desired return type.\r\n     * @return {?} Value of the entry that is identified by the specified key. In case the entry does not exist or if it cannot be\r\n     *                  loaded (due to a decoding issue), then `undefined` will be returned by this function.\r\n     */\r\n    BaseStorageService.prototype.get = /**\r\n     * Retrieves the value stored for the entry that is associated with the specified key. The given decoder is used to convert the stored\r\n     * value to the desired type. If no entry for the specified key exists or if the decoder is unable to decode the stored value, then\r\n     * `undefined` will be returned.\r\n     *\r\n     * @param {?} key     Identifier of the entry whose value is to be retrieved.\r\n     * @param {?=} decoder Decoder to use for converting the stored value to the desired return type.\r\n     * @return {?} Value of the entry that is identified by the specified key. In case the entry does not exist or if it cannot be\r\n     *                  loaded (due to a decoding issue), then `undefined` will be returned by this function.\r\n     */\r\n    function (key, decoder) {\r\n        /** @type {?} */\r\n        var value = this.getItem(key);\r\n        return value !== undefined ? (decoder || this.defaultTranscoder).decode(value) : undefined;\r\n    };\r\n    /**\r\n     * Creates or updates the entry identified by the specified key with the given value. The specified encoder is used to convert the given\r\n     * value into a format that can be stored by the storage service's underlying storage.\r\n     *\r\n     * Storing a value into the storage service will ensure that an equivalent of the value can be read back, i.e. the data and structure of\r\n     * the value will be the same. It, however, does not necessarily return the same reference.\r\n     *\r\n     * @param key     Identifier of the entry which is to be created or updated.\r\n     * @param value   Value which is to be stored.\r\n     * @param encoder Encoder used to convert the given value into a format that can be used for storage.\r\n     */\r\n    /**\r\n     * Creates or updates the entry identified by the specified key with the given value. The specified encoder is used to convert the given\r\n     * value into a format that can be stored by the storage service's underlying storage.\r\n     *\r\n     * Storing a value into the storage service will ensure that an equivalent of the value can be read back, i.e. the data and structure of\r\n     * the value will be the same. It, however, does not necessarily return the same reference.\r\n     *\r\n     * @param {?} key     Identifier of the entry which is to be created or updated.\r\n     * @param {?} value   Value which is to be stored.\r\n     * @param {?=} encoder Encoder used to convert the given value into a format that can be used for storage.\r\n     * @return {?}\r\n     */\r\n    BaseStorageService.prototype.set = /**\r\n     * Creates or updates the entry identified by the specified key with the given value. The specified encoder is used to convert the given\r\n     * value into a format that can be stored by the storage service's underlying storage.\r\n     *\r\n     * Storing a value into the storage service will ensure that an equivalent of the value can be read back, i.e. the data and structure of\r\n     * the value will be the same. It, however, does not necessarily return the same reference.\r\n     *\r\n     * @param {?} key     Identifier of the entry which is to be created or updated.\r\n     * @param {?} value   Value which is to be stored.\r\n     * @param {?=} encoder Encoder used to convert the given value into a format that can be used for storage.\r\n     * @return {?}\r\n     */\r\n    function (key, value, encoder) {\r\n        this.setItem(key, (encoder || this.defaultTranscoder).encode(value));\r\n    };\r\n    /**\r\n     * Creates a new storage service that uses the specified transcoder by default for read and write operations. The new storage service\r\n     * uses the storage service on which this function is invoked as underlying storage. Both storage services will thus be able to access\r\n     * the same data.\r\n     *\r\n     * The default transcoder will not be changed for the storage service on which this function is invoked.\r\n     *\r\n     * @param   transcoder Transcoder that should be used by default for read and write operations by the new storage service.\r\n     * @returns            A new storage service that uses the specified transcoder by default.\r\n     */\r\n    /**\r\n     * Creates a new storage service that uses the specified transcoder by default for read and write operations. The new storage service\r\n     * uses the storage service on which this function is invoked as underlying storage. Both storage services will thus be able to access\r\n     * the same data.\r\n     *\r\n     * The default transcoder will not be changed for the storage service on which this function is invoked.\r\n     *\r\n     * @template X\r\n     * @param {?} transcoder Transcoder that should be used by default for read and write operations by the new storage service.\r\n     * @return {?} A new storage service that uses the specified transcoder by default.\r\n     */\r\n    BaseStorageService.prototype.withDefaultTranscoder = /**\r\n     * Creates a new storage service that uses the specified transcoder by default for read and write operations. The new storage service\r\n     * uses the storage service on which this function is invoked as underlying storage. Both storage services will thus be able to access\r\n     * the same data.\r\n     *\r\n     * The default transcoder will not be changed for the storage service on which this function is invoked.\r\n     *\r\n     * @template X\r\n     * @param {?} transcoder Transcoder that should be used by default for read and write operations by the new storage service.\r\n     * @return {?} A new storage service that uses the specified transcoder by default.\r\n     */\r\n    function (transcoder) {\r\n        return new ProxyStorageService(transcoder, this);\r\n    };\r\n    return BaseStorageService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Transcoder that encodes values as JSON strings.\r\n */\r\nvar  /**\r\n * Transcoder that encodes values as JSON strings.\r\n */\r\nJsonStorageTranscoder = /** @class */ (function () {\r\n    function JsonStorageTranscoder() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    JsonStorageTranscoder.prototype.encode = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return JSON.stringify(value);\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    JsonStorageTranscoder.prototype.decode = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        try {\r\n            return JSON.parse(value);\r\n        }\r\n        catch (error) {\r\n            return undefined;\r\n        }\r\n    };\r\n    return JsonStorageTranscoder;\r\n}());\r\n/**\r\n * Transcoder that encodes/decodes strings **as is**, i.e. values are not modified in any way.\r\n */\r\nvar  /**\r\n * Transcoder that encodes/decodes strings **as is**, i.e. values are not modified in any way.\r\n */\r\nStringStorageTranscoder = /** @class */ (function () {\r\n    function StringStorageTranscoder() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    StringStorageTranscoder.prototype.encode = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return value;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    StringStorageTranscoder.prototype.decode = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return value;\r\n    };\r\n    return StringStorageTranscoder;\r\n}());\r\n/**\r\n * Transcoder that encodes/decodes `boolean` values.\r\n */\r\nvar  /**\r\n * Transcoder that encodes/decodes `boolean` values.\r\n */\r\nBooleanStorageTranscoder = /** @class */ (function () {\r\n    function BooleanStorageTranscoder() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    BooleanStorageTranscoder.prototype.encode = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return value.toString();\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    BooleanStorageTranscoder.prototype.decode = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value === 'true') {\r\n            return true;\r\n        }\r\n        if (value === 'false') {\r\n            return false;\r\n        }\r\n        return undefined;\r\n    };\r\n    return BooleanStorageTranscoder;\r\n}());\r\n/**\r\n * Transcoder that encodes/decodes `number` values.\r\n */\r\nvar  /**\r\n * Transcoder that encodes/decodes `number` values.\r\n */\r\nNumberStorageTranscoder = /** @class */ (function () {\r\n    function NumberStorageTranscoder() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NumberStorageTranscoder.prototype.encode = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return value.toString();\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NumberStorageTranscoder.prototype.decode = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var parsedNumber = Number(value);\r\n        return Number.isFinite(parsedNumber) ? parsedNumber : undefined;\r\n    };\r\n    return NumberStorageTranscoder;\r\n}());\r\n/**\r\n * A set of storage transcoders.\r\n * @type {?}\r\n */\r\nvar StorageTranscoders = {\r\n    /**\r\n     * Transcoder that encodes values as JSON strings.\r\n     */\r\n    JSON: (/** @type {?} */ (new JsonStorageTranscoder())),\r\n    /**\r\n     * Transcoder that encodes/decodes strings **as is**, i.e. values are not modified in any way.\r\n     */\r\n    STRING: (/** @type {?} */ (new StringStorageTranscoder())),\r\n    /**\r\n     * Transcoder that encodes/decodes `boolean` values.\r\n     */\r\n    BOOLEAN: (/** @type {?} */ (new BooleanStorageTranscoder())),\r\n    /**\r\n     * Transcoder that encodes/decodes `number` values.\r\n     */\r\n    NUMBER: (/** @type {?} */ (new NumberStorageTranscoder()))\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * A volatile `StorageService` implementation. This service guarantees that data stored will remain available as long as the application\r\n * instance is active. After the application is terminated all data will be lost.\r\n */\r\nvar  /**\r\n * A volatile `StorageService` implementation. This service guarantees that data stored will remain available as long as the application\r\n * instance is active. After the application is terminated all data will be lost.\r\n */\r\nInMemoryStorageService = /** @class */ (function (_super) {\r\n    __extends(InMemoryStorageService, _super);\r\n    /**\r\n     * Creates a new `InMemoryStorageService` instance.\r\n     */\r\n    function InMemoryStorageService() {\r\n        var _this = _super.call(this, StorageTranscoders.JSON) || this;\r\n        /**\r\n         * A map that serves as the underlying backing storage for this service.\r\n         */\r\n        _this.storage = new Map();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Checks whether an entry with the specified key exists in the storage.\r\n     *\r\n     * @param   key Identifier of the entry for which its presence in the storage is to be checked.\r\n     * @returns     `true` if an entry with the specified key exists in the storage, `false` if not.\r\n     */\r\n    /**\r\n     * Checks whether an entry with the specified key exists in the storage.\r\n     *\r\n     * @param {?} key Identifier of the entry for which its presence in the storage is to be checked.\r\n     * @return {?} `true` if an entry with the specified key exists in the storage, `false` if not.\r\n     */\r\n    InMemoryStorageService.prototype.has = /**\r\n     * Checks whether an entry with the specified key exists in the storage.\r\n     *\r\n     * @param {?} key Identifier of the entry for which its presence in the storage is to be checked.\r\n     * @return {?} `true` if an entry with the specified key exists in the storage, `false` if not.\r\n     */\r\n    function (key) {\r\n        return this.storage.has(key);\r\n    };\r\n    /**\r\n     * Removes the entry that is identified by the specified key. Attempting to remove an entry for an unknown key will have no effect.\r\n     * Attempting to retrieve an entry via the `get` method after it has been removed will result in `undefined`.\r\n     *\r\n     * @param key Identifier of the entry which is to be removed.\r\n     */\r\n    /**\r\n     * Removes the entry that is identified by the specified key. Attempting to remove an entry for an unknown key will have no effect.\r\n     * Attempting to retrieve an entry via the `get` method after it has been removed will result in `undefined`.\r\n     *\r\n     * @param {?} key Identifier of the entry which is to be removed.\r\n     * @return {?}\r\n     */\r\n    InMemoryStorageService.prototype.remove = /**\r\n     * Removes the entry that is identified by the specified key. Attempting to remove an entry for an unknown key will have no effect.\r\n     * Attempting to retrieve an entry via the `get` method after it has been removed will result in `undefined`.\r\n     *\r\n     * @param {?} key Identifier of the entry which is to be removed.\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        this.storage.delete(key);\r\n    };\r\n    /**\r\n     * Clears the storage by removing all entries. Subsequent `get(x)` calls for a key *x* will return `undefined`, until a new value is set\r\n     * for key *x*.\r\n     */\r\n    /**\r\n     * Clears the storage by removing all entries. Subsequent `get(x)` calls for a key *x* will return `undefined`, until a new value is set\r\n     * for key *x*.\r\n     * @return {?}\r\n     */\r\n    InMemoryStorageService.prototype.clear = /**\r\n     * Clears the storage by removing all entries. Subsequent `get(x)` calls for a key *x* will return `undefined`, until a new value is set\r\n     * for key *x*.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.storage.clear();\r\n    };\r\n    /**\r\n     * Performs the actual retrieval of a value from storage.\r\n     *\r\n     * @param   key Identifier of the entry whose value is to be retrieved.\r\n     * @returns     The value that is stored for the specified entry or `undefined` if no entry exists for the specified key.\r\n     */\r\n    /**\r\n     * Performs the actual retrieval of a value from storage.\r\n     *\r\n     * @protected\r\n     * @param {?} key Identifier of the entry whose value is to be retrieved.\r\n     * @return {?} The value that is stored for the specified entry or `undefined` if no entry exists for the specified key.\r\n     */\r\n    InMemoryStorageService.prototype.getItem = /**\r\n     * Performs the actual retrieval of a value from storage.\r\n     *\r\n     * @protected\r\n     * @param {?} key Identifier of the entry whose value is to be retrieved.\r\n     * @return {?} The value that is stored for the specified entry or `undefined` if no entry exists for the specified key.\r\n     */\r\n    function (key) {\r\n        if (!this.storage.has(key)) {\r\n            return undefined;\r\n        }\r\n        return (/** @type {?} */ (this.storage.get(key)));\r\n    };\r\n    /**\r\n     * Stores the provided value using specified key in the storage.\r\n     *\r\n     * @param key   Identifier of the entry for which the value is to be stored.\r\n     * @param value The value that is to be stored.\r\n     */\r\n    /**\r\n     * Stores the provided value using specified key in the storage.\r\n     *\r\n     * @protected\r\n     * @param {?} key   Identifier of the entry for which the value is to be stored.\r\n     * @param {?} value The value that is to be stored.\r\n     * @return {?}\r\n     */\r\n    InMemoryStorageService.prototype.setItem = /**\r\n     * Stores the provided value using specified key in the storage.\r\n     *\r\n     * @protected\r\n     * @param {?} key   Identifier of the entry for which the value is to be stored.\r\n     * @param {?} value The value that is to be stored.\r\n     * @return {?}\r\n     */\r\n    function (key, value) {\r\n        this.storage.set(key, value);\r\n    };\r\n    return InMemoryStorageService;\r\n}(BaseStorageService));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * An implementation of `StorageService` interface that uses an underlying (web) `Storage` object, such as `localStorage` and\r\n * `sessionStorage`, as backing data store. This class basically wraps the `Storage` object so it can be accessed through the\r\n * `StorageService` interface.\r\n */\r\nvar  /**\r\n * An implementation of `StorageService` interface that uses an underlying (web) `Storage` object, such as `localStorage` and\r\n * `sessionStorage`, as backing data store. This class basically wraps the `Storage` object so it can be accessed through the\r\n * `StorageService` interface.\r\n */\r\nWebStorageService = /** @class */ (function (_super) {\r\n    __extends(WebStorageService, _super);\r\n    /**\r\n     * Creates a new `WebStorageService` instance that uses the specified (web) storage object as underlying backing storage.\r\n     *\r\n     * @param storage Storage object which is to be wrapped in a class that implements the `StorageService` interface.\r\n     */\r\n    function WebStorageService(storage) {\r\n        var _this = _super.call(this, StorageTranscoders.JSON) || this;\r\n        _this.storage = storage;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Checks whether an entry with the specified key exists in the storage.\r\n     *\r\n     * @param   key Identifier of the entry for which its presence in the storage is to be checked.\r\n     * @returns     `true` if an entry with the specified key exists in the storage, `false` if not.\r\n     */\r\n    /**\r\n     * Checks whether an entry with the specified key exists in the storage.\r\n     *\r\n     * @param {?} key Identifier of the entry for which its presence in the storage is to be checked.\r\n     * @return {?} `true` if an entry with the specified key exists in the storage, `false` if not.\r\n     */\r\n    WebStorageService.prototype.has = /**\r\n     * Checks whether an entry with the specified key exists in the storage.\r\n     *\r\n     * @param {?} key Identifier of the entry for which its presence in the storage is to be checked.\r\n     * @return {?} `true` if an entry with the specified key exists in the storage, `false` if not.\r\n     */\r\n    function (key) {\r\n        return this.storage.getItem(key) !== null;\r\n    };\r\n    /**\r\n     * Removes the entry that is identified by the specified key. Attempting to remove an entry for an unknown key will have no effect.\r\n     * Attempting to retrieve an entry via the `get` method after it has been removed will result in `undefined`.\r\n     *\r\n     * @param key Identifier of the entry which is to be removed.\r\n     */\r\n    /**\r\n     * Removes the entry that is identified by the specified key. Attempting to remove an entry for an unknown key will have no effect.\r\n     * Attempting to retrieve an entry via the `get` method after it has been removed will result in `undefined`.\r\n     *\r\n     * @param {?} key Identifier of the entry which is to be removed.\r\n     * @return {?}\r\n     */\r\n    WebStorageService.prototype.remove = /**\r\n     * Removes the entry that is identified by the specified key. Attempting to remove an entry for an unknown key will have no effect.\r\n     * Attempting to retrieve an entry via the `get` method after it has been removed will result in `undefined`.\r\n     *\r\n     * @param {?} key Identifier of the entry which is to be removed.\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        this.storage.removeItem(key);\r\n    };\r\n    /**\r\n     * Clears the storage by removing all entries. Subsequent `get(x)` calls for a key *x* will return `undefined`, until a new value is set\r\n     * for key *x*.\r\n     */\r\n    /**\r\n     * Clears the storage by removing all entries. Subsequent `get(x)` calls for a key *x* will return `undefined`, until a new value is set\r\n     * for key *x*.\r\n     * @return {?}\r\n     */\r\n    WebStorageService.prototype.clear = /**\r\n     * Clears the storage by removing all entries. Subsequent `get(x)` calls for a key *x* will return `undefined`, until a new value is set\r\n     * for key *x*.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.storage.clear();\r\n    };\r\n    /**\r\n     * Performs the actual retrieval of a value from storage.\r\n     *\r\n     * @param   key Identifier of the entry whose value is to be retrieved.\r\n     * @returns     The value that is stored for the specified entry or `undefined` if no entry exists for the specified key.\r\n     */\r\n    /**\r\n     * Performs the actual retrieval of a value from storage.\r\n     *\r\n     * @protected\r\n     * @param {?} key Identifier of the entry whose value is to be retrieved.\r\n     * @return {?} The value that is stored for the specified entry or `undefined` if no entry exists for the specified key.\r\n     */\r\n    WebStorageService.prototype.getItem = /**\r\n     * Performs the actual retrieval of a value from storage.\r\n     *\r\n     * @protected\r\n     * @param {?} key Identifier of the entry whose value is to be retrieved.\r\n     * @return {?} The value that is stored for the specified entry or `undefined` if no entry exists for the specified key.\r\n     */\r\n    function (key) {\r\n        /** @type {?} */\r\n        var value = this.storage.getItem(key);\r\n        return value !== null ? value : undefined;\r\n    };\r\n    /**\r\n     * Stores the provided value using specified key in the storage.\r\n     *\r\n     * @param key   Identifier of the entry for which the value is to be stored.\r\n     * @param value The value that is to be stored.\r\n     */\r\n    /**\r\n     * Stores the provided value using specified key in the storage.\r\n     *\r\n     * @protected\r\n     * @param {?} key   Identifier of the entry for which the value is to be stored.\r\n     * @param {?} value The value that is to be stored.\r\n     * @return {?}\r\n     */\r\n    WebStorageService.prototype.setItem = /**\r\n     * Stores the provided value using specified key in the storage.\r\n     *\r\n     * @protected\r\n     * @param {?} key   Identifier of the entry for which the value is to be stored.\r\n     * @param {?} value The value that is to be stored.\r\n     * @return {?}\r\n     */\r\n    function (key, value) {\r\n        return this.storage.setItem(key, value);\r\n    };\r\n    return WebStorageService;\r\n}(BaseStorageService));\r\n/**\r\n * Checks whether the specified (web) storage is available and functional. This might not be the case for older browsers. However even\r\n * certain browsers that do support the web storage API can, under some circumstances, have non functional storage objects. For example,\r\n * Safari is known to have `localStorage` and `sessionStorage` throw exceptions in private mode.\r\n *\r\n * @param {?} storage Storage object which is to be tested for availability.\r\n * @return {?} `true` if the specified storage can be used, `false` if not.\r\n */\r\nfunction isStorageAvailable(storage) {\r\n    // Check if storage is available.\r\n    if (!storage) {\r\n        return false;\r\n    }\r\n    // Check if the storage can actually be accessed.\r\n    try {\r\n        /** @type {?} */\r\n        var now = Date.now();\r\n        /** @type {?} */\r\n        var testItemKey = \"storage-test-entry-\" + now;\r\n        /** @type {?} */\r\n        var testItemValue = \"storage-test-value-\" + now;\r\n        storage.setItem(testItemKey, testItemValue);\r\n        /** @type {?} */\r\n        var retrievedItemValue = storage.getItem(testItemKey);\r\n        storage.removeItem(testItemKey);\r\n        return retrievedItemValue === testItemValue;\r\n    }\r\n    catch (error) {\r\n        return false;\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @return {?}\r\n */\r\nfunction sessionStorageFactory() {\r\n    try {\r\n        if ((/** @type {?} */ (typeof sessionStorage)) !== 'undefined' && isStorageAvailable(sessionStorage)) {\r\n            return new WebStorageService(sessionStorage);\r\n        }\r\n    }\r\n    catch (_a) { }\r\n    return new InMemoryStorageService();\r\n}\r\n/**\r\n * Injection token for the session storage service.\r\n * @type {?}\r\n */\r\nvar SESSION_STORAGE = new InjectionToken('SESSION_STORAGE', { providedIn: 'root', factory: sessionStorageFactory });\r\n/**\r\n * @return {?}\r\n */\r\nfunction localStorageFactory() {\r\n    try {\r\n        if ((/** @type {?} */ (typeof localStorage)) !== 'undefined' && isStorageAvailable(localStorage)) {\r\n            return new WebStorageService(localStorage);\r\n        }\r\n    }\r\n    catch (_a) { }\r\n    return new InMemoryStorageService();\r\n}\r\n/**\r\n * Injection token for the local storage service.\r\n * @type {?}\r\n */\r\nvar LOCAL_STORAGE = new InjectionToken('LOCAL_STORAGE', { providedIn: 'root', factory: localStorageFactory });\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @deprecated You no longer need to import the `StorageServiceModule`, since the `SESSION_STORAGE` and `LOCAL_STORAGE` injection tokens are\r\n * now 'self providing' in the root injector.\r\n */\r\nvar StorageServiceModule = /** @class */ (function () {\r\n    function StorageServiceModule() {\r\n    }\r\n    StorageServiceModule.decorators = [\r\n        { type: NgModule }\r\n    ];\r\n    return StorageServiceModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { BaseStorageService, InMemoryStorageService, ProxyStorageService, sessionStorageFactory, localStorageFactory, SESSION_STORAGE, LOCAL_STORAGE, StorageServiceModule, JsonStorageTranscoder, StringStorageTranscoder, BooleanStorageTranscoder, NumberStorageTranscoder, StorageTranscoders, isStorageAvailable, WebStorageService };\n\n//# sourceMappingURL=ngx-webstorage-service.js.map","import { Inject, Injectable } from '@angular/core';\n\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\n\nconst WIZARD_FORM_KEY = 'wizard-form-data';\nconst WIZARD_STEP_KEY = 'wizard-step-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebStorageService {\n\n  constructor(@Inject(SESSION_STORAGE) private storage: StorageService) { }\n  \n  public saveQuestionToStorage(\n    formId: string,\n    questionId: string,\n    questionValue: string | boolean\n  ): void {\n    // Get all saved form data from storage or set as an empty object\n    let allForms = this.storage.get(WIZARD_FORM_KEY) || {};\n    // Add form data to object\n    allForms[formId] = Object.assign(allForms[formId] || {}, { [questionId]: questionValue });\n    // Save data to storage\n    this.storage.set(WIZARD_FORM_KEY, allForms);\n  }\n\n  public saveFormToStorage(formId: string, formValue: object): void {\n    let allForms = this.storage.get(WIZARD_FORM_KEY) || {};\n    allForms[formId] = Object.assign(allForms[formId] || {}, formValue);\n    this.storage.set(WIZARD_FORM_KEY, allForms);\n  }\n\n  public getAllForms(): object {\n    const allForms = this.storage.get(WIZARD_FORM_KEY) || {};\n    return allForms;\n  }\n\n  public getSingleForm(formId: string): object {\n    const allForms = this.storage.get(WIZARD_FORM_KEY) || {};\n    return allForms[formId] || null;\n  }\n\n  public getSingleQuestion(formId: string, questionId: string): object {\n    let allForms = this.storage.get(WIZARD_FORM_KEY) || {};\n    let value = (allForms[formId] || {})[questionId];\n    return value || null;\n  }\n\n  public saveStepToStorage(stepNumber: number): void {\n    this.storage.set(WIZARD_STEP_KEY, stepNumber);\n  }\n\n  public getStepNumber(): number {\n    return this.storage.get(WIZARD_STEP_KEY);\n  }\n}\n","module.exports = \"<div class=\\\"modal-body\\\">\\n  <h4>This is not a recognized Chandler address</h4>\\n  <p class=\\\"mt-3\\\">Below are the closest matches to the address you have entered. Please select the correct address from this list.</p>\\n  <div class=\\\"list-group mt-3\\\" *ngIf=\\\"results.length\\\">\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"list-group-item list-group-item-action\\\"\\n      *ngFor=\\\"let result of results\\\"\\n      (click)=\\\"handleAddressSelection(result)\\\">\\n      <div>\\n        <span>{{result.address1}}</span>\\n        <span *ngIf=\\\"result.address2.length\\\"> {{result.address2}}</span>\\n      </div>\\n      <div>\\n        <span>{{result.city}}</span>\\n        <span> {{result.state}}</span>\\n        <span> {{result.zip}}</span>\\n      </div>\\n    </button>\\n  </div>\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-secondary mt-3\\\"\\n    (click)=\\\"bsModalRef.hide()\\\">\\n    I would like to re-enter my address\\n  </button>\\n</div>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'wizard-address-verification',\n  templateUrl: './address-verification.component.html'\n})\nexport class AddressVerificationComponent implements OnInit {\n  @Output() selectedAddress: EventEmitter<object> = new EventEmitter();\n\n  results: any[] = [];\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit() {\n  }\n\n  public handleAddressSelection(address: object): void {\n    this.selectedAddress.emit(address);\n    this.bsModalRef.hide();\n  }\n\n}\n","import { Configuration } from './configuration';\n\nexport const step1Configuration: Configuration = {\n  \"id\": \"BUSINESS_REGISTRATION\",\n  \"type\": \"fixedGroup\",\n  \"heading\": \"Do you already have a business registration with the city of Chandler?\",\n  \"subheading\": \"Select \\\"yes\\\" or \\\"no\\\" then click continue.\",\n  \"questions\": [\n    {\n      \"id\": \"ALREADY_REGISTERED\",\n      \"controlType\": \"radio\",\n      \"customStyle\": \"checkbox\",\n      \"options\": [\n        {\n          \"id\": \"isRegistered\",\n          \"value\": \"Yes\",\n          \"label\": \"Yes, I already have business registration with the City of Chandler\"\n        },\n        {\n          \"id\": \"isNotRegistered\",\n          \"value\": \"No\",\n          \"label\": \"No, I do not have a business registration with the City of Chandler\"\n        }\n      ],\n      \"validation\": {\n        \"required\": true\n      },\n      \"dependencies\": [\n        \"APPLICANT_BASIC_A\",\n        \"APPLICANT_BASIC_B\",\n        \"ENTITY_INFO_A\",\n        \"ENTITY_INFO_B\",\n        \"ENTITY_INFO_C\",\n        \"ENTITY_INFO_D\",\n        \"ENTITY_INFO_E\",\n        \"OWNER_INFO_A\",\n        \"OWNER_INFO_B\",\n        \"LOCATION_INFO_A\",\n        \"LOCATION_INFO_B\",\n        \"LOCATION_INFO_C\",\n        \"LOCATION_INFO_D\",\n        \"LOCATION_INFO_E\",\n        \"LOCATION_INFO_F\"\n      ]\n    }\n  ]\n}\n\nexport const step2Configuration: Configuration = {\n  \"id\": \"BUSINESS_ADDRESS\",\n  \"type\": \"fixedGroup\",\n  \"heading\": \"What is your business address?\",\n  \"subheading\": \"Complete the form and then click continue. <em class=\\\"text-danger\\\">* Required fields</em>\",\n  \"questions\": [\n    {\n      \"id\": \"BUSINESS_ADDR1\",\n      \"controlType\": \"textbox\",\n      \"type\": \"text\",\n      \"placeholder\": \"Address\",\n      \"order\": 1,\n      \"validation\": {\n        \"required\": true\n      }\n    },\n    {\n      \"id\": \"BUSINESS_ADDR2\",\n      \"controlType\": \"textbox\",\n      \"type\": \"text\",\n      \"placeholder\": \"Suite #\",\n      \"order\": 2\n    },\n    {\n      \"id\": \"BUSINESS_CITY\",\n      \"controlType\": \"textbox\",\n      \"type\": \"text\",\n      \"placeholder\": \"City\",\n      \"order\": 3,\n      \"columns\": 6,\n      \"validation\": {\n        \"required\": true\n      }\n    },\n    {\n      \"id\": \"BUSINESS_STATE\",\n      \"controlType\": \"textbox\",\n      \"type\": \"text\",\n      \"placeholder\": \"State\",\n      \"columns\": 3,\n      \"order\": 4,\n      \"validation\": {\n        \"required\": true\n      }\n    },\n    {\n      \"id\": \"BUSINESS_ZIP\",\n      \"controlType\": \"textbox\",\n      \"type\": \"text\",\n      \"placeholder\": \"Zip\",\n      \"columns\": 3,\n      \"order\": 5,\n      \"validation\": {\n        \"required\": true\n      }\n    }\n  ]\n}\n\nexport const step3Configuration: Configuration = {\n  \"id\": \"NOT_IN_CHANDLER\",\n  \"type\": \"fixedGroup\",\n  \"heading\": \"It looks like your address is not within the City limits and you may not need a business registration.\",\n  \"subheading\": \"Are any of the following true in regard to your business?\",\n  \"questions\": [\n    {\n      \"id\": \"NONPROFIT_SOLICITOR\",\n      \"controlType\": \"checkbox\",\n      \"value\": false,\n      \"label\": \"Are you a non-profit solicitor?\",\n      \"customStyle\": \"switch\",\n      \"validation\": {\n        \"required\": true\n      },\n    },\n    {\n      \"id\": \"SPECIAL_EVENT_LIQUOR\",\n      \"controlType\": \"checkbox\",\n      \"value\": false,\n      \"label\": \"Are you operating a special event serving liquor?\",\n      \"customStyle\": \"switch\",\n      \"validation\": {\n        \"required\": true\n      },\n    },\n    {\n      \"id\": \"PEDDLER\",\n      \"controlType\": \"checkbox\",\n      \"value\": false,\n      \"label\": \"Are you a peddler?\",\n      \"customStyle\": \"switch\",\n      \"validation\": {\n        \"required\": true\n      },\n    },\n    {\n      \"id\": \"REGISTRATION_PRIVILEDGES\",\n      \"controlType\": \"checkbox\",\n      \"value\": false,\n      \"label\": \"Do you still want a license to take advantage of registration privileges?\",\n      \"customStyle\": \"switch\",\n      \"validation\": {\n        \"required\": true\n      },\n    }\n  ]\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n  configUrl: string = './assets/wizard-config.mock-data.json';\n\n  constructor(private http: HttpClient) { }\n\n  get(): Observable<object> {\n    return this.http.get<any>(this.configUrl)\n    .pipe(\n      catchError(this.handleError<any>('get'))\n    )\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // Log error to console\n      console.error(error);\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"<div class=\\\"container mt-6 mb-9\\\">\\n  <h1>\\n    Thank you for visiting!\\n  </h1>\\n  <p class=\\\"mt-3\\\">You do not need a business registration</p>\\n  <a class=\\\"coc-link-arrow-left mt-2\\\" href=\\\"https://www.chandleraz.gov/business/tax-and-license\\\">Return to Tax & License</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'wizard-goodbye',\n  templateUrl: './goodbye.component.html'\n})\nexport class GoodbyeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"coc-wizard-progress-bar\\\">\\n  <div class=\\\"coc-progress-bar-track\\\"></div>\\n  <div class=\\\"coc-progress-bar-indicator\\\" [ngStyle]=\\\"{'left': progress + '%'}\\\">\\n    <div class=\\\"coc-progress-bar-percent\\\">{{progress}}</div>\\n    <div class=\\\"coc-progress-bar-label\\\">Done</div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'wizard-progress-bar',\n  templateUrl: './progress-bar.component.html'\n})\nexport class ProgressBarComponent implements OnInit {\n  @Input() progress: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export { Question } from './question';\nexport { TextboxQuestion } from './question-textbox';\nexport { TextareaQuestion } from './question-textarea';\nexport { CheckboxQuestion } from './question-checkbox';\nexport { RadioQuestion } from './question-radio';\nexport { DropdownQuestion } from './question-dropdown';\nexport { DatepickerQuestion } from './question-datepicker';\nexport { SameAsQuestion } from './question-same-as';\nexport { QuestionValidation } from './question-validation';\nexport { QuestionOptions } from './question-options';","import { Question } from './question';\n\nexport class CheckboxQuestion extends Question<boolean> {\n  controlType = 'checkbox';\n  customStyle: string;\n\n  constructor(options: object = {}) {\n    super(options);\n    this.customStyle = options['customStyle'] || '';\n  }\n}","import { Question } from './question';\n\nexport class DatepickerQuestion extends Question<string> {\n  controlType = 'datepicker';\n  placeholder: string;\n\n  constructor(options: object = {}) {\n    super(options);\n    this.placeholder = options['placeholder'] || '';\n  }\n}","import { Question } from './question';\nimport { QuestionOptions } from './question-options';\n\nexport class DropdownQuestion extends Question<string> {\n  controlType = 'dropdown';\n  options: QuestionOptions[] = [];\n  placeholder: string;\n\n  constructor(options: object = {}) {\n    super(options);\n    this.options = options['options'] || [];\n    this.placeholder = options['placeholder'] || '';\n  }\n}","import { Question } from './question';\nimport { QuestionOptions } from './question-options';\n\nexport class RadioQuestion extends Question<string> {\n  controlType = 'radio';\n  customStyle: string;\n  options: QuestionOptions[] = [];\n\n  constructor(options: object = {}) {\n    super(options);\n    this.customStyle = options['customStyle'] || '';\n    this.options = options['options'] || [];\n  }\n}","import { Question } from './question';\n\nexport class TextareaQuestion extends Question<string> {\n  controlType = 'textarea';\n  rows: number;\n  placeholder: string;\n\n  constructor(options: object = {}) {\n    super(options);\n    this.rows = options['rows'] || 2;\n    this.placeholder = options['placeholder'] || '';\n  }\n}","import { Question } from './question';\n\nexport class TextboxQuestion extends Question<string> {\n  controlType = 'textbox';\n  type: string;\n  placeholder: string;\n\n  constructor(options: object = {}) {\n    super(options);\n    this.type = options['type'] || '';\n    this.placeholder = options['placeholder'] || '';\n  }\n}","module.exports = \"\\n<div [formGroup]=\\\"form\\\" [ngSwitch]=\\\"question.controlType\\\">\\n  <div class=\\\"form-group\\\"\\n    [class.coc-required]=\\\"question.validation.required\\\"\\n    [ngClass]=\\\"{\\n      'custom-control mt-1' : question.controlType === 'checkbox',\\n      'custom-switch coc-custom-control-right' : question.controlType === 'checkbox' && question.customStyle === 'switch',\\n      'custom-checkbox' : question.controlType === 'checkbox' && question.customStyle !== 'switch',\\n      'coc-custom-radio-group' : question.controlType === 'radio'\\n    }\\\">\\n\\n    <ng-container *ngSwitchCase=\\\"'textbox'\\\">\\n      <label\\n        *ngIf=\\\"question.label !== ''\\\"\\n        [attr.for]=\\\"question.id\\\">\\n        {{question.label}}\\n      </label>\\n      <input\\n        [type]=\\\"question.type\\\"\\n        [id]=\\\"question.id\\\"\\n        [formControlName]=\\\"question.id\\\"\\n        [placeholder]=\\\"question.placeholder\\\"\\n        (blur)=\\\"saveToWebStorage()\\\"\\n        class=\\\"form-control\\\"\\n        [class.is-invalid]=\\\"control.invalid && (control.dirty || control.touched)\\\">\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'datepicker'\\\">\\n      <label\\n        *ngIf=\\\"question.label !== ''\\\"\\n        [attr.for]=\\\"question.id\\\">\\n        {{question.label}}\\n      </label>\\n      <input\\n        bsDatepicker\\n        type=\\\"text\\\"\\n        [id]=\\\"question.id\\\"\\n        [formControlName]=\\\"question.id\\\"\\n        [placeholder]=\\\"question.placeholder\\\"\\n        (blur)=\\\"saveToWebStorage()\\\"\\n        class=\\\"form-control\\\"\\n        [class.is-invalid]=\\\"control.invalid && (control.dirty || control.touched)\\\">\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'textarea'\\\">\\n      <label\\n        *ngIf=\\\"question.label !== ''\\\"\\n        [attr.for]=\\\"question.id\\\">\\n        {{question.label}}\\n      </label>\\n      <textarea\\n        [id]=\\\"question.id\\\"\\n        [formControlName]=\\\"question.id\\\"\\n        [placeholder]=\\\"question.placeholder\\\"\\n        [rows]=\\\"question.rows\\\"\\n        (blur)=\\\"saveToWebStorage()\\\"\\n        class=\\\"form-control\\\"\\n        [class.is-invalid]=\\\"control.invalid && (control.dirty || control.touched)\\\">\\n      </textarea>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\n      <input\\n        type=\\\"checkbox\\\"\\n        [id]=\\\"question.id\\\"\\n        [formControlName]=\\\"question.id\\\"\\n        (blur)=\\\"saveToWebStorage()\\\"\\n        class=\\\"custom-control-input\\\"\\n        [class.is-invalid]=\\\"control.invalid && (control.dirty || control.touched)\\\">\\n      <label\\n        *ngIf=\\\"question.label !== ''\\\"\\n        class=\\\"custom-control-label\\\"\\n        [attr.for]=\\\"question.id\\\">\\n        {{question.label}}\\n      </label>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'radio'\\\">\\n      <label *ngIf=\\\"question.label !== ''\\\">{{question.label}}</label>\\n      <div\\n        *ngFor=\\\"let option of question.options\\\"\\n        class=\\\"custom-control\\\"\\n        [ngClass]=\\\"{\\n          'custom-checkbox' : question.customStyle === 'checkbox',\\n          'custom-radio' : question.customStyle !== 'checkbox'\\n        }\\\"\\n        [class.coc-required]=\\\"question.validation.required\\\">\\n        <input\\n          type=\\\"radio\\\"\\n          [id]=\\\"option.id\\\"\\n          [value]=\\\"option.value\\\"\\n          [formControlName]=\\\"question.id\\\"\\n          (blur)=\\\"saveToWebStorage()\\\"\\n          class=\\\"custom-control-input\\\"\\n          [class.is-invalid]=\\\"control.invalid && (control.dirty || control.touched)\\\">\\n        <label\\n          *ngIf=\\\"option.label !== ''\\\"\\n          class=\\\"custom-control-label\\\"\\n          [attr.for]=\\\"option.id\\\">\\n          {{option.label}}\\n        </label>\\n      </div>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'dropdown'\\\">\\n      <label\\n        *ngIf=\\\"question.label !== ''\\\"\\n        [attr.for]=\\\"question.id\\\">\\n        {{question.label}}\\n      </label>\\n      <select\\n        class=\\\"custom-select\\\"\\n        [id]=\\\"question.id\\\"\\n        [formControlName]=\\\"question.id\\\"\\n        [attr.multiple]=\\\"question.multiple\\\"\\n        (blur)=\\\"saveToWebStorage()\\\"\\n        [value]=\\\"question.placeholder\\\"\\n        [class.is-invalid]=\\\"control.invalid && (control.dirty || control.touched)\\\">\\n        <option\\n          *ngIf=\\\"question.placeholder !== ''\\\"\\n          selected\\n          hidden>\\n          {{question.placeholder}}\\n        </option>\\n        <option\\n          *ngFor=\\\"let option of question.options\\\"\\n          [value]=\\\"option.value\\\">\\n          {{option.label}}\\n        </option>\\n      </select>\\n    </ng-container>\\n\\n    <div class=\\\"invalid-feedback\\\">\\n      <span *ngIf=\\\"question.validation.required\\\">This field is required.</span>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, Input } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\n\nimport { Question } from './question';\nimport { WebStorageService } from 'src/app/shared/web-storage.service';\n\n@Component({\n  selector: 'wizard-question',\n  templateUrl: './question.component.html'\n})\nexport class QuestionComponent {\n  @Input() question: Question<any>;\n  @Input() form: FormGroup;\n  @Input() formId: string;\n\n  constructor(private webStorageService: WebStorageService) { }\n\n  private saveToWebStorage(): void {\n    this.webStorageService.saveFormToStorage(this.formId, this.form.value);\n  }\n\n  get isValid(): boolean {\n    return this.form.controls[this.question.id].valid;\n  }\n\n  get control(): AbstractControl {\n    return this.form.get(this.question.id);\n  }\n\n}\n","import { QuestionValidation, SameAsQuestion, QuestionOptions } from './';\n\nexport class Question<T> {\n  value?: T;\n  id: string;\n  label?: string;\n  order?: number;\n  controlType: string;\n  validation?: QuestionValidation;\n  type?: string;\n  placeholder?: string;\n  columns?: number;\n  options?: QuestionOptions[];\n  dependencies?: string[];\n  customStyle?: string;\n  sameAs?: SameAsQuestion;\n\n  constructor(options: {\n      value?: T,\n      id?: string,\n      label?: string,\n      order?: number,\n      controlType?: string,\n      validation?: QuestionValidation,\n      columns?: number\n    } = {}) {\n    this.value = options.value;\n    this.id = options.id || '';\n    this.label = options.label || '';\n    this.order = options.order === undefined ? 1 : options.order;\n    this.controlType = options.controlType || '';\n    this.validation = options.validation || {};\n    this.columns = options.columns || 0;\n  }\n}","module.exports = \"\\n<div class=\\\"jumbotron jumbotron-fluid pt-2 pb-3\\\">\\n  <div class=\\\"jumbotron-container\\\">\\n    <h1 class=\\\"h3 text-center\\\">Business Registration & Renewal</h1>\\n    <wizard-progress-bar [progress]=\\\"80\\\"></wizard-progress-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-12 col-sm-10 mt-4\\\">\\n      <h2 class=\\\"h3 font-weight-normal\\\" [innerHTML]=\\\"heading\\\"></h2>\\n      <p class=\\\"coc-font-size-14\\\" [innerHTML]=\\\"subheading\\\"></p>\\n      <form [formGroup]=\\\"form\\\" class=\\\"w-lg-75 mt-3\\\">\\n        <div class=\\\"form-row\\\">\\n          <wizard-question\\n            *ngFor=\\\"let question of questions\\\"\\n            class=\\\"col-12\\\"\\n            [ngClass]=\\\"question.columns === 0 ? '' : 'col-md-' + question.columns\\\"\\n            [question]=\\\"question\\\"\\n            [form]=\\\"form\\\"\\n            [formId]=\\\"formId\\\">\\n          </wizard-question>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-12 col-sm-10 mt-4 mb-6\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-previous\\\" cdkStepperPrevious>\\n        Back\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-next ml-3\\\"\\n        [disabled]=\\\"form.invalid\\\"\\n        cdkStepperNext>\\n        Continue\\n      </button>\\n      <button\\n        *ngIf=\\\"showSummaryButton\\\"\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-next ml-3\\\"\\n        (click)=\\\"goToSummary()\\\">\\n        Skip to Summary\\n      </button>\\n    </div>\\n  </div>\\n</div>\"","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit, \n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Question } from '../question';\n\n@Component({\n  selector: 'wizard-step',\n  templateUrl: './step.component.html'\n})\nexport class StepComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() heading: string;\n  @Input() subheading: string;\n  @Input() form: FormGroup;\n  @Input() formId: string;\n  @Input() questions: Question<any>;\n  @Input() skipToSummary: boolean = false;\n  @Output() summary = new EventEmitter<any>();\n\n  ngUnsubscribe: Subject<any> = new Subject();\n  showSummaryButton: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.form.valueChanges\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(() => {\n        // Update summary button display when form values change\n        this.showSummaryButton = this.skipToSummary && this.form.valid;\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.skipToSummary) {\n      // Update summary button display when input from parent changes\n      this.showSummaryButton = changes.skipToSummary.currentValue && this.form.valid;\n    }\n  }\n\n  ngOnDestroy() {\n    // Subscription clean up\n    // See https://stackoverflow.com/a/41177163\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  private goToSummary(): void {\n    this.summary.emit();\n  }\n\n}\n","module.exports = \"<div [style.display]=\\\"selected ? 'block' : 'none'\\\">\\n  <ng-container [ngTemplateOutlet]=\\\"selected.content\\\"></ng-container>\\n</div>\"","import { Component } from '@angular/core';\nimport { CdkStepper } from '@angular/cdk/stepper';\n\n@Component({\n  selector: 'wizard-stepper',\n  templateUrl: './stepper.component.html',\n  providers: [{\n    provide: CdkStepper,\n    useExisting: StepperComponent\n  }]\n})\nexport class StepperComponent extends CdkStepper { }\n","module.exports = \"<div class=\\\"coc-wizard-summary-item\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-md-4 py-1\\\">\\n      {{config.heading}}\\n    </div>\\n    <div class=\\\"col-auto order-md-3\\\">\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"coc-summary-item-edit-button btn p-1\\\"\\n        (click)=\\\"goToStep(config.stepNumber)\\\">\\n        <i class=\\\"fal fa-pencil-alt\\\"></i>\\n        Edit\\n      </button>\\n    </div>\\n    <div class=\\\"col-12 col-md\\\">\\n      <div class=\\\"row\\\">\\n        <ng-container *ngFor=\\\"let question of config.formQuestions\\\">\\n          <div\\n            *ngIf=\\\"config.formGroup.value[question.id] !== '' && config.formGroup.value[question.id] !== null && config.formGroup.value[question.id] !== undefined\\\"\\n            class=\\\"col-12 py-1\\\"\\n            [ngClass]=\\\"question.columns === 0 ? '' : 'col-md-' + question.columns\\\">\\n            <div class=\\\"coc-font-size-14\\\">\\n              <span *ngIf=\\\"question.label !== ''\\\">{{question.label}}</span>\\n              <span *ngIf=\\\"question.placeholder !== ''\\\">{{question.placeholder}}</span>\\n            </div>\\n            {{config.formGroup.value[question.id]}}\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Configuration } from '../configuration/configuration';\n\n@Component({\n  selector: 'wizard-summary-item',\n  templateUrl: './summary-item.component.html'\n})\nexport class SummaryItemComponent {\n  @Input() config: Configuration;\n  @Output() stepId = new EventEmitter<number>();\n\n  constructor() { }\n\n  public goToStep(step: number): void {\n    this.stepId.emit(step);\n  }\n\n}\n","import {\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\n\nimport {\n  Question,\n  TextboxQuestion,\n  TextareaQuestion,\n  CheckboxQuestion,\n  RadioQuestion,\n  DropdownQuestion,\n  DatepickerQuestion\n} from './question';\n\nexport function toFormQuestion(questions: any[]): Question<any>[] {\n  let group: Question<any>[] = [];\n\n  questions.forEach(question => {\n    switch (question.controlType) {\n      case 'textbox':\n        group.push(\n          new TextboxQuestion({\n            id: question.id,\n            value: question.value,\n            label: question.label,\n            placeholder: question.placeholder,\n            order: question.order,\n            type: question.type,\n            validation: question.validation,\n            columns: question.columns\n          })\n        );\n        break;\n      case 'textarea':\n        group.push(\n          new TextareaQuestion({\n            id: question.id,\n            value: question.value,\n            label: question.label,\n            placeholder: question.placeholder,\n            order: question.order,\n            rows: question.rows,\n            validation: question.validation,\n            columns: question.columns\n          })\n        );\n        break;\n      case 'checkbox':\n        group.push(\n          new CheckboxQuestion({\n            id: question.id,\n            value: question.value,\n            label: question.label,\n            placeholder: question.placeholder,\n            order: question.order,\n            customStyle: question.customStyle,\n            validation: question.validation,\n            columns: question.columns\n          })\n        );\n        break;\n      case 'radio':\n        group.push(\n          new RadioQuestion({\n            id: question.id,\n            value: question.value,\n            label: question.label,\n            order: question.order,\n            customStyle: question.customStyle,\n            options: question.options,\n            validation: question.validation,\n            columns: question.columns\n          })\n        );\n        break;\n      case 'dropdown':\n        group.push(\n          new DropdownQuestion({\n            id: question.id,\n            value: question.value,\n            label: question.label,\n            placeholder: question.placeholder,\n            order: question.order,\n            options: question.options,\n            validation: question.validation,\n            columns: question.columns\n          })\n        );\n        break;\n      case 'datepicker':\n        group.push(\n          new DatepickerQuestion({\n            id: question.id,\n            value: question.value,\n            label: question.label,\n            placeholder: question.placeholder,\n            order: question.order,\n            validation: question.validation,\n            columns: question.columns\n          })\n        );\n        break;\n    }\n  });\n\n  return group.sort((a, b) => a.order - b.order);\n}\n\nexport function toFormGroup(questions: Question<any>[]): FormGroup {\n  let group: any = {};\n\n  \n\n  questions.forEach(question => {\n    let validationObj: object = question.validation;\n    let validators: ValidatorFn[] = [];\n    \n    // Build array of validators to pass in the new form control\n    // Check to see if validation object from config is empty\n    if (Object.keys(validationObj).length !== 0 && validationObj.constructor === Object) {\n      // Loop through validation object for each question\n      // and push angular validator into the array\n      Object.keys(validationObj).forEach(key => {\n        switch (key) {\n          case 'required':\n            validators.push(Validators.required);\n          break;\n        }\n      });\n    }\n\n    group[question.id] = new FormControl(question.value, validators);\n    \n  });\n\n  return new FormGroup(group);\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WizardComponent } from './wizard.component';\nimport { GoodbyeComponent } from './goodbye/goodbye.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WizardComponent\n  },\n  {\n    path: 'goodbye',\n    component: GoodbyeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WizardRoutingModule { }\n","module.exports = \"<wizard-stepper\\n  [linear]=\\\"true\\\"\\n  [selectedIndex]=\\\"stepperIndex\\\"\\n  (selectionChange)=\\\"handleStepChange($event)\\\">\\n\\n  <cdk-step [stepControl]=\\\"step1Config.formGroup\\\">\\n    <div class=\\\"jumbotron jumbotron-fluid\\\">\\n      <div class=\\\"jumbotron-container\\\">\\n        <h1>Business Registration & Renewal</h1>\\n        <hr class=\\\"my-2\\\">\\n        <p><strong>Welcome to the Chandler business registration and renewal portal.</strong> This portal will allow you to register or renew your business registration with the City of Chandler. This easy-to-use portal will ask you a series of questions to walk you through.</p>\\n        <p class=\\\"coc-font-size-22\\\"><em>Simply answer the first question below to get started.</em></p>\\n      </div>\\n    </div>\\n      \\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12 mt-1\\\">\\n          <a class=\\\"coc-link-small coc-link-arrow-left\\\" href=\\\"https://www.chandleraz.gov/business/tax-and-license\\\">Return to Tax & License</a>\\n        </div>\\n      </div>\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-sm-10 mt-4\\\">\\n          <h2 class=\\\"h3 font-weight-normal\\\" [innerHTML]=\\\"step1Config.heading\\\"></h2>\\n          <p class=\\\"coc-font-size-14\\\" [innerHTML]=\\\"step1Config.subheading\\\"></p>\\n          <form [formGroup]=\\\"step1Config.formGroup\\\" class=\\\"mt-3\\\">\\n            <div class=\\\"form-row\\\">\\n              <wizard-question\\n                *ngFor=\\\"let question of step1Config.formQuestions\\\"\\n                class=\\\"col-12\\\"\\n                [ngClass]=\\\"question.columns === 0 ? '' : 'col-md-' + question.columns\\\"\\n                [question]=\\\"question\\\"\\n                [form]=\\\"step1Config.formGroup\\\"\\n                [formId]=\\\"step1Config.id\\\">\\n              </wizard-question>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-sm-10 mt-4 mb-6\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-next\\\" [disabled]=\\\"step1Config.formGroup.invalid\\\" cdkStepperNext>\\n            Continue\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </cdk-step>\\n\\n  <cdk-step [stepControl]=\\\"step2Config.formGroup\\\">\\n    <div class=\\\"jumbotron jumbotron-fluid pt-2 pb-3\\\">\\n      <div class=\\\"jumbotron-container\\\">\\n        <h1 class=\\\"h3 text-center\\\">Business Registration & Renewal</h1>\\n        <wizard-progress-bar [progress]=\\\"10\\\"></wizard-progress-bar>\\n      </div>\\n    </div>\\n      \\n    <div class=\\\"container\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-sm-10 mt-4\\\">\\n          <h3 class=\\\"h3 font-weight-normal\\\" [innerHTML]=\\\"step2Config.heading\\\"></h3>\\n          <p class=\\\"coc-font-size-14\\\" [innerHTML]=\\\"step2Config.subheading\\\"></p>\\n          <form [formGroup]=\\\"step2Config.formGroup\\\" class=\\\"w-lg-75 mt-3\\\">\\n            <div class=\\\"form-row\\\">\\n              <wizard-question\\n                *ngFor=\\\"let question of step2Config.formQuestions\\\"\\n                class=\\\"col-12\\\"\\n                [ngClass]=\\\"question.columns === 0 ? '' : 'col-md-' + question.columns\\\"\\n                [question]=\\\"question\\\"\\n                [form]=\\\"step2Config.formGroup\\\"\\n                [formId]=\\\"step2Config.id\\\">\\n              </wizard-question>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-sm-10 mt-4 mb-6\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-previous\\\" cdkStepperPrevious>\\n            Back\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-next ml-3\\\" [disabled]=\\\"step2Config.formGroup.invalid\\\" (click)=\\\"handleStep2ContinueClick()\\\">\\n            Continue\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </cdk-step>\\n  \\n  <cdk-step *ngIf=\\\"!isInChandler\\\" [stepControl]=\\\"step3Config.formGroup\\\">\\n    <div class=\\\"jumbotron jumbotron-fluid pt-2 pb-3\\\">\\n      <div class=\\\"jumbotron-container\\\">\\n        <h1 class=\\\"h3 text-center\\\">Business Registration & Renewal</h1>\\n        <wizard-progress-bar [progress]=\\\"10\\\"></wizard-progress-bar>\\n      </div>\\n    </div>\\n      \\n    <div class=\\\"container\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-sm-10 mt-4\\\">\\n          <h2 class=\\\"h3 font-weight-normal\\\" [innerHTML]=\\\"step3Config.heading\\\"></h2>\\n          <p class=\\\"coc-font-size-14\\\" [innerHTML]=\\\"step3Config.subheading\\\"></p>\\n          <form [formGroup]=\\\"step3Config.formGroup\\\" class=\\\"mt-3\\\">\\n            <div class=\\\"form-row\\\">\\n              <wizard-question\\n                *ngFor=\\\"let question of step3Config.formQuestions\\\"\\n                class=\\\"col-12\\\"\\n                [ngClass]=\\\"question.columns === 0 ? '' : 'col-md-' + question.columns\\\"\\n                [question]=\\\"question\\\"\\n                [form]=\\\"step3Config.formGroup\\\"\\n                [formId]=\\\"step3Config.id\\\">\\n              </wizard-question>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-sm-10 mt-4 mb-6\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-previous\\\" cdkStepperPrevious>\\n            Back\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-next ml-3\\\" [disabled]=\\\"step3Config.formGroup.invalid\\\" (click)=\\\"handleStep3ContinueClick()\\\">\\n            Continue\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </cdk-step>\\n\\n  <ng-container *ngFor=\\\"let config of primaryStepsConfig\\\">\\n    <cdk-step [stepControl]=\\\"config.formGroup\\\">\\n      <wizard-step\\n        [heading]=\\\"config.heading\\\"\\n        [subheading]=\\\"config.subheading\\\"\\n        [form]=\\\"config.formGroup\\\"\\n        [formId]=\\\"config.id\\\"\\n        [questions]=\\\"config.formQuestions\\\"\\n        (summary)=\\\"gotToSummary($event)\\\">\\n      </wizard-step>\\n    </cdk-step>\\n  </ng-container>\\n\\n  <ng-container *ngFor=\\\"let config of secondaryStepsConfig\\\">\\n    <cdk-step *ngIf=\\\"config.shouldBeDisplayed\\\" [stepControl]=\\\"config.formGroup\\\">\\n      <wizard-step\\n        [heading]=\\\"config.heading\\\"\\n        [subheading]=\\\"config.subheading\\\"\\n        [form]=\\\"config.formGroup\\\"\\n        [formId]=\\\"config.id\\\"\\n        [questions]=\\\"config.formQuestions\\\"\\n        [skipToSummary]=\\\"skipToSummary\\\"\\n        (summary)=\\\"gotToSummary($event)\\\">\\n      </wizard-step>\\n    </cdk-step>\\n  </ng-container>\\n  \\n  <cdk-step>\\n    <div class=\\\"jumbotron jumbotron-fluid pt-2 pb-3\\\">\\n      <div class=\\\"jumbotron-container\\\">\\n        <h1 class=\\\"h3 text-center\\\">Business Registration & Renewal</h1>\\n        <wizard-progress-bar [progress]=\\\"99\\\"></wizard-progress-bar>\\n      </div>\\n    </div>\\n      \\n    <div class=\\\"container\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-sm-10 mt-4\\\">\\n          <h3 class=\\\"h3 font-weight-normal\\\">Summary</h3>\\n          <p class=\\\"coc-font-size-14\\\">Review of your answers. If everything is accurate, click submit.</p>\\n          <div class=\\\"striped mt-3\\\">\\n            <wizard-summary-item\\n              class=\\\"d-block\\\"\\n              [config]=\\\"step2Config\\\"\\n              (stepId)=\\\"goToStep($event)\\\">\\n            </wizard-summary-item>\\n            <ng-container *ngIf=\\\"!isInChandler\\\">\\n              <wizard-summary-item\\n                class=\\\"d-block\\\"\\n                [config]=\\\"step3Config\\\"\\n                (stepId)=\\\"goToStep($event)\\\">\\n              </wizard-summary-item>\\n            </ng-container>\\n            <ng-container *ngFor=\\\"let config of primaryStepsConfig\\\">\\n              <wizard-summary-item\\n                class=\\\"d-block\\\"\\n                [config]=\\\"config\\\"\\n                (stepId)=\\\"goToStep($event)\\\">\\n              </wizard-summary-item>\\n            </ng-container>\\n            <ng-container *ngFor=\\\"let config of secondaryStepsConfig\\\">\\n              <wizard-summary-item\\n                *ngIf=\\\"config.shouldBeDisplayed\\\"\\n                class=\\\"d-block\\\"\\n                [config]=\\\"config\\\"\\n                (stepId)=\\\"goToStep($event)\\\">\\n              </wizard-summary-item>\\n            </ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-sm-10 mt-4 mb-6\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-previous\\\" cdkStepperPrevious>\\n            Back\\n          </button>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-next ml-3\\\" (click)=\\\"handleWizardSubmit()\\\">\\n            Submit\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </cdk-step>\\n\\n  <cdk-step>\\n    <div class=\\\"jumbotron jumbotron-fluid pt-2 pb-3\\\">\\n      <div class=\\\"jumbotron-container\\\">\\n        <h1 class=\\\"h3 text-center\\\">Business Registration & Renewal</h1>\\n        <wizard-progress-bar [progress]=\\\"100\\\"></wizard-progress-bar>\\n      </div>\\n    </div>\\n      \\n    <div class=\\\"container\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-sm-10 mt-4\\\">\\n          <h3 class=\\\"h3 font-weight-normal\\\">Thank you for registering</h3>\\n          <p class=\\\"w-lg-75 mb-8\\\">Tempor dolor nam eget, eget in class tempor, ut imperdiet, pede tristique massa, duis donec. Sed nec tempus ac nisl, ultricies a lorem sem scelerisque justo, orci ipsum a euismod felis, pretium hendrerit, blandit est vehicula tempus volutpat. Molestie magna, a consequat justo in aliquam, ut massa facilisi. In consectetuer, eleifend faucibus est blandit, vel dolor mollis eu nonummy, euismod amet odio maecenas tristique. Nascetur urna taciti sit in aenean accusamus, auctor.</p>\\n        </div>\\n      </div>\\n    </div>\\n  </cdk-step>\\n  \\n</wizard-stepper>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\n\nimport { ConfigurationService } from './configuration/configuration.service';\nimport { AddressVerificationComponent } from './address-verification/address-verification.component';\nimport { toFormQuestion, toFormGroup } from './wizard-helpers';\nimport { WebStorageService } from '../shared/web-storage.service';\nimport { SameAsQuestion } from './question';\nimport { Configuration } from './configuration/configuration';\nimport {\n  step1Configuration,\n  step2Configuration,\n  step3Configuration\n} from './configuration/configuration.constants';\n\n@Component({\n  selector: 'coc-wizard',\n  templateUrl: './wizard.component.html'\n})\nexport class WizardComponent implements OnInit, OnDestroy {\n  ngUnsubscribe: Subject<any> = new Subject();\n  wizardConfig: any = {};\n\n  step1Config: Configuration = step1Configuration;\n  step2Config: Configuration = step2Configuration;\n  step3Config: Configuration = step3Configuration;\n\n  allStepsConfig: Configuration[] = [];\n  primaryStepsConfig: Configuration[] = [];\n  secondaryStepsConfig: Configuration[] = [];\n\n  savedInWebStorage: object = {};\n\n  bsModalRef: BsModalRef;\n\n  stepperIndex: number = 0;\n  isInChandler: boolean = false;\n  step3Continue: boolean = false;\n\n  // This will be used to keep track of how many\n  // total steps there are since steps can be\n  // added or removed dynamically based on form answers\n  // This value is a zero based index\n  stepCount: number = 0;\n  // Set an offset for the first few steps that are fixed\n  stepCountOffset: number = 3;\n\n  // Variable to control the display of the jump to summary button\n  skipToSummary: boolean = false;\n\n  constructor(\n    private router: Router,\n    private modalService: BsModalService,\n    private ConfigurationService: ConfigurationService,\n    private webStorageService: WebStorageService\n  ) { }\n\n  ngOnInit() {\n\n    // Get any saved form data from web storage\n    this.savedInWebStorage = this.webStorageService.getAllForms();\n\n    // Get configuration file\n    this.ConfigurationService.get()\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(\n        (config) => {\n          this.wizardConfig = config;\n        },\n        (error) => {\n          console.error(error)\n        },\n        () => {\n\n          // Load all config data into local variable\n          this.allStepsConfig = this.wizardConfig.questionGroups;\n          \n          // Convert array of questions in json config to Angular form groups\n          this.allStepsConfig.forEach(config => {\n\n            // Add saved form values from web storage to config object\n            this.restoreValuesFromWebStorage(config);\n            \n            // Store converted questions in group object\n            // to pass to each step and question component\n            config.formQuestions = toFormQuestion(config.questions);\n\n            // Store questions as form group inside group object also\n            config.formGroup = toFormGroup(config.formQuestions);\n            \n            // Set flag on secondary question groups for display status\n            // Init value as false, questions will be added as needed\n            // based on primary question group answers\n            if (config.type === 'secondary') {\n              config.shouldBeDisplayed = false;\n            }\n\n          });\n\n          // Create new array for primary questions from config\n          this.primaryStepsConfig = this.allStepsConfig.filter(config => {\n            return config.type === 'primary';\n          });\n          this.primaryStepsConfig.sort((a, b) => a.order - b.order);\n\n          // Create new array for secondary questions from config\n          this.secondaryStepsConfig = this.allStepsConfig.filter(config => {\n            return config.type === 'secondary';\n          });\n          this.secondaryStepsConfig.sort((a, b) => a.order - b.order);\n\n          // Set 'should be displayed' based on saved/restored\n          // form values\n          this.updateStepsToBeDisplayed();\n          // Set flag based on value changes\n          this.primaryStepsConfig.forEach(config => {\n            config.formGroup.valueChanges\n              .pipe(takeUntil(this.ngUnsubscribe))\n              .subscribe(() => {\n                this.updateStepsToBeDisplayed();\n              });\n          });\n\n          // Subscribe to \"Same As\" checkbox changes\n          // and call function to copy form fields\n          this.secondaryStepsConfig.forEach(config => {\n            config.questions.forEach(question => {\n              if (question.sameAs) {\n                config.formGroup.get(question.id).valueChanges\n                  .pipe(takeUntil(this.ngUnsubscribe))\n                  .subscribe(value => {\n                    if (value) {\n                      this.handleSameAsCheckbox(config, question.sameAs);\n                    }\n                  });\n              }\n            });\n          });\n          \n        }\n      );\n\n    this.restoreValuesFromWebStorage(this.step1Config);\n    this.step1Config.stepNumber = 0;\n    this.step1Config.formQuestions = toFormQuestion(this.step1Config.questions);\n    this.step1Config.formGroup = toFormGroup(this.step1Config.formQuestions);\n\n    this.restoreValuesFromWebStorage(this.step2Config);\n    this.step2Config.stepNumber = 1;\n    this.step2Config.formQuestions = toFormQuestion(this.step2Config.questions);\n    this.step2Config.formGroup = toFormGroup(this.step2Config.formQuestions);\n    \n    // Simulating some validation to trigger address verification modal\n    this.setIsInChandler(this.step2Config.formGroup.get('BUSINESS_CITY').value);\n    this.step2Config.formGroup.get('BUSINESS_CITY').valueChanges\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(value => {\n        this.setIsInChandler(value);\n      });\n\n    this.restoreValuesFromWebStorage(this.step3Config);\n    this.step3Config.stepNumber = 2;\n    this.step3Config.formQuestions = toFormQuestion(this.step3Config.questions);\n    this.step3Config.formGroup = toFormGroup(this.step3Config.formQuestions);\n    \n    // Validation to determine whether user should continue after step 3\n    // If any checkbox was checked/true, continue\n    // Set variable based on saved/restored question values\n    this.step3Continue = Object.values(this.step3Config.formGroup.value).some(Boolean);\n    // Set variable when value changes\n    this.step3Config.formGroup.valueChanges\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(value => {\n        this.step3Continue = Object.values(value).some(Boolean);\n      });\n\n    // Set current step if there is saved data from web storage\n    setTimeout(() => {\n      this.stepperIndex = this.webStorageService.getStepNumber() || 0;\n    });\n  }\n\n  ngOnDestroy() {\n    // Subscription clean up\n    // See https://stackoverflow.com/a/41177163\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  private updateStepsToBeDisplayed(): void {\n    let primaryQuestionsChecked: string[] = [];\n    let secondaryQuestionsToShow: string[] = [];\n\n    // Whenever steps are updated we need to re-index \n    // all of the step numbers\n    this.stepCount = this.stepCountOffset;\n\n    // Always include all dependent questions for\n    // business registration which is step 1\n    this.step1Config.questions.forEach(question => {\n      question.dependencies.forEach(dep => {\n        secondaryQuestionsToShow.push(dep);\n      });\n    });\n\n    // Loop through all primary questions\n    this.primaryStepsConfig.forEach(config => {\n\n      // Assign a step number to each step config\n      config.stepNumber = this.stepCount;\n      // Increment the step count\n      this.stepCount++;\n\n      // Get all primary question values\n      Object.keys(config.formGroup.controls).forEach(key => {\n        // Only store values that are checked/yes/true\n        if (config.formGroup.controls[key].value) {\n          primaryQuestionsChecked.push(key);\n        }\n      });\n\n      // Get all dependencies of primaryQuestionsChecked\n      // Loop through all questions\n      config.questions.forEach(question => {\n        // Check to see if this question is checked/yes/true\n        if (primaryQuestionsChecked.includes(question.id)) {\n          question.dependencies.forEach(dep => {\n            // Check to see if it's already included\n            // If not, add it to the array\n            if (!secondaryQuestionsToShow.includes(dep)) {\n              secondaryQuestionsToShow.push(dep);\n            }\n          });\n        }\n      });\n      \n    });\n\n    // Now loop through all secondary questions\n    this.secondaryStepsConfig.forEach(config => {\n      \n      // Set everything to not display first\n      config.shouldBeDisplayed = false;\n      // Now set questions to be displayed\n      // if our new array includes them\n      if (secondaryQuestionsToShow.includes(config.id)) {\n\n        // Assign a step number to each step config\n        config.stepNumber = this.stepCount;\n        // Increment the step count\n        this.stepCount++;\n        \n        config.shouldBeDisplayed = true;\n      } else {\n        config.stepNumber = null;\n      }\n    });\n\n  }\n\n  private setIsInChandler(city: string): void {\n    if (city !== null && city !== undefined) {\n      this.isInChandler = city.toLowerCase() === 'chandler';\n      this.step3Config.shouldBeDisplayed = !this.isInChandler;\n      this.stepCountOffset = this.isInChandler ? 2 : 3;\n    }\n  }\n\n  public handleStep2ContinueClick(): void {\n    if (this.isInChandler) {\n      this.openAddressVerificationModal();\n    } else {\n      this.stepperIndex = 2;\n    }\n  }\n\n  private openAddressVerificationModal(): void {\n    // TODO: Replace temporary data with data from geocoder API\n    let initialState = {\n      'results': [\n        {'address1': '175 S Arizona Av', 'address2': 'Suite 2', 'city': 'Chandler', 'state': 'Arizona', 'zip': '85225'},\n        {'address1': '175 S Arizona Pl', 'address2': '', 'city': 'Chandler', 'state': 'Arizona', 'zip': '85225'},\n        {'address1': '175 N Arizona Av', 'address2': '', 'city': 'Chandler', 'state': 'Arizona', 'zip': '85225'},\n        {'address1': '175 . Arizona Av', 'address2': 'Suite 4', 'city': 'Chandler', 'state': 'Arizona', 'zip': '85225'}\n      ]\n    };\n    this.bsModalRef = this.modalService.show(AddressVerificationComponent, {\n      initialState,\n      class: 'modal-dialog-centered modal-lg',\n      backdrop: 'static',\n      keyboard: false\n    });\n    this.bsModalRef.content.selectedAddress\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(address => {\n        // Update form values from suggested address in modal\n        this.step2Config.formGroup.patchValue({\n          BUSINESS_ADDR1: address.address1,\n          BUSINESS_ADDR2: address.address2,\n          BUSINESS_CITY: address.city,\n          BUSINESS_STATE: address.state,\n          BUSINESS_ZIP: address.zip\n        });\n      // Delay step change so modal closes first\n      setTimeout(() => {\n        this.stepperIndex++;\n      }, 500);\n    });\n  }\n\n  public handleStep3ContinueClick(): void {\n    if (this.step3Continue) {\n      this.stepperIndex++;\n    } else {\n      this.router.navigate(['/wizard/goodbye']);\n    }\n  }\n\n  private handleSameAsCheckbox(config: Configuration, sameAs: SameAsQuestion): void {\n    // Find the config group that matches the ID of the Same As question\n    let sameAsConfig = this.secondaryStepsConfig.find(config => {\n      return config.id === sameAs.stepName;\n    });\n    sameAs.mapping.forEach(question => {\n      config.formGroup.patchValue({\n        [question.to]: sameAsConfig.formGroup.value[question.from]\n      });\n    });\n  }\n\n  public handleStepChange(event: StepperSelectionEvent): void {\n    // Synchronize local step index with stepper component index\n    this.stepperIndex = event.selectedIndex;\n    // Save step number to web storage\n    this.webStorageService.saveStepToStorage(this.stepperIndex);\n    // If current step is the summary, show button to allow\n    // users to jump back after editing a step\n    if (this.stepperIndex === this.stepCount) {\n      this.skipToSummary = true;\n    }\n    // TODO: replace this scroll method with a global service\n    var element = document.querySelector('body');\n    setTimeout(() => {\n      element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n        inline: 'nearest'\n      });\n    }, 50);\n  }\n\n  public goToStep(stepNumber: number): void {\n    this.stepperIndex = stepNumber;\n  }\n\n  private gotToSummary(): void {\n    this.stepperIndex = this.stepCount;\n  }\n\n  public handleWizardSubmit(): void {\n    // TODO: form submit\n    this.stepperIndex++;\n  }\n\n  private restoreValuesFromWebStorage(config: Configuration): void {\n    if (this.savedInWebStorage.hasOwnProperty(config.id)) {\n      config.questions.forEach(question => {\n        if (this.savedInWebStorage[config.id].hasOwnProperty(question.id)) {\n          question.value = this.savedInWebStorage[config.id][question.id];\n        }\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { WizardRoutingModule } from './wizard-routing.module';\nimport { WizardComponent } from './wizard.component';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\nimport { StepperComponent } from './stepper/stepper.component';\nimport { AddressVerificationComponent } from './address-verification/address-verification.component';\nimport { GoodbyeComponent } from './goodbye/goodbye.component';\nimport { QuestionComponent } from './question/question.component';\nimport { StepComponent } from './step/step.component';\nimport { SummaryItemComponent } from './summary-item/summary-item.component';\n\n@NgModule({\n  declarations: [\n    WizardComponent,\n    ProgressBarComponent,\n    StepperComponent,\n    AddressVerificationComponent,\n    GoodbyeComponent,\n    QuestionComponent,\n    StepComponent,\n    SummaryItemComponent\n  ],\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    WizardRoutingModule\n  ],\n  entryComponents: [\n    WizardComponent,\n    AddressVerificationComponent\n  ]\n})\nexport class WizardModule { }\n"],"sourceRoot":""}